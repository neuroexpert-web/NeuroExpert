'use client';

import React, { useState, useEffect, useRef } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import styles from './AnalyticsRealTimeDashboard.module.css';

// –¢–∏–ø—ã –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
interface AnalyticsService {
  id: string;
  name: string;
  description: string;
  icon: string;
  color: string;
  isActive: boolean;
  metrics: {
    [key: string]: {
      value: number | string;
      label: string;
      description: string;
      trend?: number;
      format?: 'number' | 'percent' | 'time' | 'currency';
    };
  };
}

export default function AnalyticsRealTimeDashboard() {
  const containerRef = useRef<HTMLDivElement>(null);
  const [selectedService, setSelectedService] = useState<string>('overview');
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
  const [services, setServices] = useState<AnalyticsService[]>([
    {
      id: 'google-analytics',
      name: 'Google Analytics',
      description: '–ê–Ω–∞–ª–∏–∑ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ —Å–∞–π—Ç–∞ –∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
      icon: 'üìä',
      color: '#4285F4',
      isActive: true,
      metrics: {
        visitors: { 
          value: 1247, 
          label: '–ü–æ—Å–µ—Ç–∏—Ç–µ–ª–∏ —Å–µ–π—á–∞—Å', 
          description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π –Ω–∞ —Å–∞–π—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å',
          trend: 12.5,
          format: 'number'
        },
        pageViews: { 
          value: 3892, 
          label: '–ü—Ä–æ—Å–º–æ—Ç—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü', 
          description: '–°–∫–æ–ª—å–∫–æ —Å—Ç—Ä–∞–Ω–∏—Ü –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è',
          trend: 8.3,
          format: 'number'
        },
        avgTime: { 
          value: '2:34', 
          label: '–í—Ä–µ–º—è –Ω–∞ —Å–∞–π—Ç–µ', 
          description: '–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø—Ä–æ–≤–æ–¥—è—Ç –Ω–∞ —Å–∞–π—Ç–µ',
          trend: 15.2,
          format: 'time'
        },
        bounceRate: { 
          value: 32.5, 
          label: '–ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç–∫–∞–∑–æ–≤', 
          description: '–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —É—à–ª–∏ —Å—Ä–∞–∑—É',
          trend: -5.1,
          format: 'percent'
        }
      }
    },
    {
      id: 'yandex-metrica',
      name: '–Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∞',
      description: '–†–æ—Å—Å–∏–π—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤–µ–±-–∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏',
      icon: 'üü°',
      color: '#FFCC00',
      isActive: true,
      metrics: {
        visitors: { 
          value: 892, 
          label: '–í–∏–∑–∏—Ç—ã', 
          description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–∑–∏—Ç–æ–≤ –Ω–∞ —Å–∞–π—Ç',
          trend: 10.2,
          format: 'number'
        },
        newVisitors: { 
          value: 67.3, 
          label: '–ù–æ–≤—ã–µ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–∏', 
          description: '–ü—Ä–æ—Ü–µ–Ω—Ç –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞—à–ª–∏ –≤–ø–µ—Ä–≤—ã–µ',
          trend: 3.5,
          format: 'percent'
        },
        depth: { 
          value: 4.2, 
          label: '–ì–ª—É–±–∏–Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞', 
          description: '–°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü –∑–∞ –≤–∏–∑–∏—Ç',
          trend: 7.8,
          format: 'number'
        },
        goals: { 
          value: 156, 
          label: '–î–æ—Å—Ç–∏–≥–Ω—É—Ç—ã–µ —Ü–µ–ª–∏', 
          description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ü–µ–ª–µ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π',
          trend: 22.4,
          format: 'number'
        }
      }
    },
    {
      id: 'sentry',
      name: 'Sentry',
      description: '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—à–∏–±–æ–∫ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏',
      icon: 'üõ°Ô∏è',
      color: '#362C63',
      isActive: true,
      metrics: {
        errors: { 
          value: 3, 
          label: '–û—à–∏–±–∫–∏ –∑–∞ —á–∞—Å', 
          description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫ –≤ —Ä–∞–±–æ—Ç–µ —Å–∞–π—Ç–∞',
          trend: -45.2,
          format: 'number'
        },
        errorRate: { 
          value: 0.02, 
          label: '–ü—Ä–æ—Ü–µ–Ω—Ç –æ—à–∏–±–æ–∫', 
          description: '–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å—Ç–æ–ª–∫–Ω—É–≤—à–∏—Ö—Å—è —Å –æ—à–∏–±–∫–∞–º–∏',
          trend: -12.7,
          format: 'percent'
        },
        performance: { 
          value: 98.7, 
          label: '–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å', 
          description: '–ü—Ä–æ—Ü–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –±–µ–∑ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫',
          trend: 2.1,
          format: 'percent'
        },
        affectedUsers: { 
          value: 12, 
          label: '–ó–∞—Ç—Ä–æ–Ω—É—Ç—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', 
          description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –æ—à–∏–±–∫–∞–º–∏',
          trend: -23.5,
          format: 'number'
        }
      }
    },
    {
      id: 'appmetrica',
      name: 'AppMetrica',
      description: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –æ—Ç –Ø–Ω–¥–µ–∫—Å–∞',
      icon: 'üì±',
      color: '#FF6B6B',
      isActive: true,
      metrics: {
        activeUsers: { 
          value: 5423, 
          label: '–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', 
          description: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è',
          trend: 18.9,
          format: 'number'
        },
        sessions: { 
          value: 12847, 
          label: '–°–µ—Å—Å–∏–∏', 
          description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—É—Å–∫–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
          trend: 14.3,
          format: 'number'
        },
        crashRate: { 
          value: 0.3, 
          label: '–ü—Ä–æ—Ü–µ–Ω—Ç —Å–±–æ–µ–≤', 
          description: '–ü—Ä–æ—Ü–µ–Ω—Ç —Å–µ—Å—Å–∏–π —Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º–∏ –æ—à–∏–±–∫–∞–º–∏',
          trend: -28.6,
          format: 'percent'
        },
        retention: { 
          value: 68.5, 
          label: '–í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ—Å—Ç—å', 
          description: '–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –≤–µ—Ä–Ω—É–≤—à–∏—Ö—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å',
          trend: 5.7,
          format: 'percent'
        }
      }
    },
    {
      id: 'openreplay',
      name: 'OpenReplay',
      description: '–ó–∞–ø–∏—Å—å –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Å–µ—Å—Å–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
      icon: 'üé•',
      color: '#5B47D9',
      isActive: true,
      metrics: {
        recordings: { 
          value: 342, 
          label: '–ó–∞–ø–∏—Å–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏', 
          description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
          trend: 12.4,
          format: 'number'
        },
        issues: { 
          value: 7, 
          label: '–û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã', 
          description: '–ü—Ä–æ–±–ª–µ–º—ã –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º –æ–ø—ã—Ç–µ',
          trend: -15.3,
          format: 'number'
        },
        rageClicks: { 
          value: 23, 
          label: '–ö–ª–∏–∫–∏ —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏—è', 
          description: '–ú–µ—Å—Ç–∞, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ –∫–ª–∏–∫–∞—é—Ç –æ—Ç –Ω–µ–ø–æ–Ω–∏–º–∞–Ω–∏—è',
          trend: -8.7,
          format: 'number'
        },
        avgLoadTime: { 
          value: '1.2—Å', 
          label: '–°–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏', 
          description: '–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü',
          trend: -18.5,
          format: 'time'
        }
      }
    },
    {
      id: 'hotjar',
      name: 'Hotjar',
      description: '–¢–µ–ø–ª–æ–≤—ã–µ –∫–∞—Ä—Ç—ã –∏ –∞–Ω–∞–ª–∏–∑ –ø–æ–≤–µ–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
      icon: 'üî•',
      color: '#FF3C00',
      isActive: true,
      metrics: {
        heatmaps: { 
          value: 15, 
          label: '–ê–∫—Ç–∏–≤–Ω—ã–µ —Ç–µ–ø–ª–æ–≤—ã–µ –∫–∞—Ä—Ç—ã', 
          description: '–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–∫–æ–≤ –∏ –¥–≤–∏–∂–µ–Ω–∏–π –º—ã—à–∏',
          trend: 0,
          format: 'number'
        },
        feedback: { 
          value: 47, 
          label: '–û—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', 
          description: '–°–æ–±—Ä–∞–Ω–Ω—ã–µ –º–Ω–µ–Ω–∏—è –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è',
          trend: 32.1,
          format: 'number'
        },
        satisfaction: { 
          value: 4.3, 
          label: '–û—Ü–µ–Ω–∫–∞ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏', 
          description: '–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∏–∑ 5)',
          trend: 6.2,
          format: 'number'
        },
        scrollDepth: { 
          value: 72.4, 
          label: '–ì–ª—É–±–∏–Ω–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏', 
          description: '–°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü',
          trend: 9.8,
          format: 'percent'
        }
      }
    }
  ]);

  // –≠–º—É–ª—è—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
  useEffect(() => {
    const interval = setInterval(() => {
      setServices(prevServices => 
        prevServices.map(service => ({
          ...service,
          metrics: Object.fromEntries(
            Object.entries(service.metrics).map(([key, metric]) => {
              let newValue = metric.value;
              
              // –°–ª—É—á–∞–π–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
              if (typeof metric.value === 'number') {
                const change = (Math.random() - 0.5) * 0.1; // ¬±5%
                newValue = Math.round(metric.value * (1 + change) * 100) / 100;
              } else if (metric.format === 'time' && typeof metric.value === 'string') {
                // –î–ª—è –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ—Å—Ç–æ –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å
                newValue = metric.value;
              }
              
              return [key, {
                ...metric,
                value: newValue,
                trend: metric.trend ? metric.trend + (Math.random() - 0.5) * 2 : 0
              }];
            })
          )
        }))
      );
    }, 3000); // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã

    return () => clearInterval(interval);
  }, []);

  // –†–∞—Å—á–µ—Ç –æ–±—â–∏—Ö –º–µ—Ç—Ä–∏–∫
  const overviewMetrics = {
    totalVisitors: services.reduce((sum, s) => {
      const visitorsMetric = s.metrics.visitors || s.metrics.activeUsers;
      return sum + (typeof visitorsMetric?.value === 'number' ? visitorsMetric.value : 0);
    }, 0),
    totalErrors: services.find(s => s.id === 'sentry')?.metrics.errors.value || 0,
    avgSatisfaction: services.find(s => s.id === 'hotjar')?.metrics.satisfaction.value || 0,
    totalGoals: services.find(s => s.id === 'yandex-metrica')?.metrics.goals.value || 0
  };

  return (
    <div ref={containerRef} className={styles.dashboard}>
      {/* –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className={styles.header}>
        <div className={styles.headerContent}>
          <motion.div 
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
          >
            <h1 className={styles.title}>
              <span className={styles.titleIcon}>üìä</span>
              –¶–µ–Ω—Ç—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π
            </h1>
          </motion.div>

          {/* –î–µ–º–æ-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ */}
          <motion.div 
            className={styles.demoNotice}
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ delay: 0.3 }}
          >
            <span className={styles.demoIcon}>‚ú®</span>
            <span>–î–µ–º–æ-—Ä–µ–∂–∏–º</span>
          </motion.div>
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ —Å–∫—Ä–æ–ª–ª–æ–º */}
      <div className={styles.mainContent}>
        {/* –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <section className={styles.overviewSection}>
          <h2 className={styles.sectionTitle}>
            <span className={styles.sectionIcon}>üéØ</span>
            –ö–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞
          </h2>
          <div className={styles.overviewGrid}>
            <OverviewCard
              icon="üë•"
              title="–û–±—â–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è"
              value={overviewMetrics.totalVisitors}
              description="–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–∞ –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å"
              color="#4285F4"
              trend={12.5}
            />
            <OverviewCard
              icon="‚úÖ"
              title="–î–æ—Å—Ç–∏–≥–Ω—É—Ç—ã–µ —Ü–µ–ª–∏"
              value={overviewMetrics.totalGoals}
              description="–¶–µ–ª–µ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–ø–æ–∫—É–ø–∫–∏, –∑–∞—è–≤–∫–∏)"
              color="#34A853"
              trend={22.4}
            />
            <OverviewCard
              icon="üòä"
              title="–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å"
              value={`${overviewMetrics.avgSatisfaction}/5`}
              description="–ù–∞—Å–∫–æ–ª—å–∫–æ –¥–æ–≤–æ–ª—å–Ω—ã –≤–∞—à–∏ –∫–ª–∏–µ–Ω—Ç—ã"
              color="#FBBC04"
              trend={6.2}
            />
            <OverviewCard
              icon="‚ö†Ô∏è"
              title="–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã"
              value={overviewMetrics.totalErrors}
              description="–û—à–∏–±–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å"
              color="#EA4335"
              trend={-45.2}
              inverse
            />
          </div>
        </section>

        {/* AI –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
        <section className={styles.aiSection}>
          <h2 className={styles.sectionTitle}>
            <span className={styles.sectionIcon}>ü§ñ</span>
            AI —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞
          </h2>
          <div className={styles.aiGrid}>
            <AIRecommendation
              icon="üöÄ"
              priority="high"
              title="–£–≤–µ–ª–∏—á—å—Ç–µ –∫–æ–Ω–≤–µ—Ä—Å–∏—é –Ω–∞ 25%"
              description="–ó–∞–º–µ—á–µ–Ω –≤—ã—Å–æ–∫–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç–∫–∞–∑–æ–≤ (32.5%) –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞. –£–ø—Ä–æ—Å—Ç–∏—Ç–µ —Ñ–æ—Ä–º—É –∏ –¥–æ–±–∞–≤—å—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä."
              metrics="–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª: +‚ÇΩ2.4–ú/–º–µ—Å—è—Ü"
            />
            <AIRecommendation
              icon="‚ö°"
              priority="medium"
              title="–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏"
              description="–°—Ç—Ä–∞–Ω–∏—Ü—ã –≥—Ä—É–∑—è—Ç—Å—è 1.2 —Å–µ–∫—É–Ω–¥—ã, —á—Ç–æ –Ω–∞ 20% –º–µ–¥–ª–µ–Ω–Ω–µ–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤. –°–∂–∞—Ç–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —É–≤–µ–ª–∏—á–∏—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏—é."
              metrics="–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª: +15% –∫ –ø—Ä–æ–¥–∞–∂–∞–º"
            />
            <AIRecommendation
              icon="üì±"
              priority="high"
              title="–ú–æ–±–∏–ª—å–Ω–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è —Ä–∞—Å—Ç—ë—Ç"
              description="68.5% –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞—Ö–æ–¥—è—Ç —Å –º–æ–±–∏–ª—å–Ω—ã—Ö. –ê–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–¥ –º–æ–±–∏–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞."
              metrics="–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª: +5400 –∫–ª–∏–µ–Ω—Ç–æ–≤"
            />
            <AIRecommendation
              icon="üéØ"
              priority="low"
              title="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ—Ç–∞—Ä–≥–µ—Ç–∏–Ω–≥"
              description="47% –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –≤–∏–∑–∏—Ç–æ–≤."
              metrics="–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª: +8% –≤—ã—Ä—É—á–∫–∏"
            />
          </div>
        </section>

        {/* –°–µ—Ä–≤–∏—Å—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ */}
        <section className={styles.servicesSection}>
          <h2 className={styles.sectionTitle}>
            <span className={styles.sectionIcon}>üõ†Ô∏è</span>
            –ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
          </h2>
          <p className={styles.sectionDescription}>
            –ö–∞–∂–¥—ã–π —Å–µ—Ä–≤–∏—Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞
          </p>

          <div className={styles.servicesGrid}>
            {services.map((service, index) => (
              <ServiceCard
                key={service.id}
                service={service}
                index={index}
                onClick={() => setSelectedService(service.id)}
                isSelected={selectedService === service.id}
              />
            ))}
          </div>
        </section>

        {/* –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Å–µ—Ä–≤–∏—Å—É */}
        <AnimatePresence mode="wait">
          {selectedService !== 'overview' && (
            <motion.section
              key={selectedService}
              className={styles.detailSection}
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              exit={{ opacity: 0, y: -20 }}
            >
              {services
                .filter(s => s.id === selectedService)
                .map(service => (
                  <ServiceDetail key={service.id} service={service} />
                ))}
            </motion.section>
          )}
        </AnimatePresence>

        {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ */}
        <section className={styles.benefitsSection}>
          <h2 className={styles.sectionTitle}>
            <span className={styles.sectionIcon}>üí°</span>
            –ö–∞–∫ —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞—à–µ–º—É –±–∏–∑–Ω–µ—Å—É
          </h2>
          <div className={styles.benefitsGrid}>
            <BenefitCard
              icon="üìà"
              title="–†–æ—Å—Ç –ø—Ä–æ–¥–∞–∂"
              description="–ü–æ–Ω–∏–º–∞–π—Ç–µ, —á—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–π—Ç–µ —É—Å–ø–µ—à–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è"
            />
            <BenefitCard
              icon="üí∞"
              title="–≠–∫–æ–Ω–æ–º–∏—è –±—é–¥–∂–µ—Ç–∞"
              description="–ù–µ —Ç—Ä–∞—Ç—å—Ç–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ –Ω–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –∏ —Ä–µ—à–µ–Ω–∏—è"
            />
            <BenefitCard
              icon="üéØ"
              title="–¢–æ—á–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è"
              description="–ü—Ä–∏–Ω–∏–º–∞–π—Ç–µ —Ä–µ—à–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö, –∞ –Ω–µ –¥–æ–≥–∞–¥–æ–∫"
            />
            <BenefitCard
              icon="üòä"
              title="–î–æ–≤–æ–ª—å–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã"
              description="–ë—ã—Å—Ç—Ä–æ –Ω–∞—Ö–æ–¥–∏—Ç–µ –∏ —É—Å—Ç—Ä–∞–Ω—è–π—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
            />
          </div>
        </section>

        {/* CTA —Å–µ–∫—Ü–∏—è */}
        <section className={styles.ctaSection}>
          <motion.div 
            className={styles.ctaContent}
            initial={{ opacity: 0, scale: 0.95 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ delay: 0.5 }}
          >
            <h2 className={styles.ctaTitle}>
              –•–æ—Ç–∏—Ç–µ —Ç–∞–∫—É—é –∂–µ —Å–∏—Å—Ç–µ–º—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞?
            </h2>
            <p className={styles.ctaDescription}>
              NeuroExpert –Ω–∞—Å—Ç—Ä–æ–∏—Ç –∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, 
              –æ–±—É—á–∏—Ç –≤–∞—à—É –∫–æ–º–∞–Ω–¥—É –∏ –æ–±–µ—Å–ø–µ—á–∏—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É
            </p>
            <button className={styles.ctaButton}>
              <span>–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é</span>
              <span className={styles.ctaArrow}>‚Üí</span>
            </button>
          </motion.div>
        </section>
      </div>
    </div>
  );
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function OverviewCard({ icon, title, value, description, color, trend, inverse = false }: any) {
  const trendPositive = inverse ? trend < 0 : trend > 0;
  
  return (
    <motion.div 
      className={styles.overviewCard}
      whileHover={{ scale: 1.02 }}
      transition={{ type: "spring", stiffness: 300 }}
    >
      <div className={styles.overviewIcon} style={{ backgroundColor: `${color}20` }}>
        <span style={{ fontSize: '2rem' }}>{icon}</span>
      </div>
      <div className={styles.overviewContent}>
        <h3 className={styles.overviewTitle}>{title}</h3>
        <div className={styles.overviewValue}>
          <span className={styles.overviewNumber}>{typeof value === 'number' ? value.toLocaleString() : value}</span>
          {trend && (
            <span className={`${styles.overviewTrend} ${trendPositive ? styles.positive : styles.negative}`}>
              {trendPositive ? '‚Üë' : '‚Üì'} {Math.abs(trend).toFixed(1)}%
            </span>
          )}
        </div>
        <p className={styles.overviewDescription}>{description}</p>
      </div>
    </motion.div>
  );
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ —Å–µ—Ä–≤–∏—Å–∞
function ServiceCard({ service, index, onClick, isSelected }: any) {
  return (
    <motion.div
      className={`${styles.serviceCard} ${isSelected ? styles.selected : ''}`}
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ delay: index * 0.1 }}
      onClick={onClick}
      whileHover={{ scale: 1.02 }}
      style={{ borderColor: isSelected ? service.color : 'transparent' }}
    >
      <div className={styles.serviceHeader}>
        <div className={styles.serviceIcon}>{service.icon}</div>
        <div className={styles.serviceInfo}>
          <h3 className={styles.serviceName}>{service.name}</h3>
          <p className={styles.serviceDescription}>{service.description}</p>
        </div>
        <div className={`${styles.serviceStatus} ${service.isActive ? styles.active : ''}`}>
          {service.isActive ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}
        </div>
      </div>
      
      <div className={styles.serviceMetrics}>
        {Object.entries(service.metrics).slice(0, 2).map(([key, metric]: [string, any]) => (
          <div key={key} className={styles.metricItem}>
            <span className={styles.metricLabel}>{metric.label}</span>
            <span className={styles.metricValue}>
              {metric.format === 'percent' ? `${metric.value}%` : metric.value}
            </span>
          </div>
        ))}
      </div>
    </motion.div>
  );
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä–≤–∏—Å–µ
function ServiceDetail({ service }: { service: AnalyticsService }) {
  return (
    <div className={styles.serviceDetail}>
      <div className={styles.detailHeader}>
        <div className={styles.detailIcon}>{service.icon}</div>
        <div>
          <h3 className={styles.detailTitle}>{service.name}</h3>
          <p className={styles.detailDescription}>{service.description}</p>
        </div>
      </div>

      <div className={styles.metricsGrid}>
        {Object.entries(service.metrics).map(([key, metric]: [string, any]) => (
          <motion.div
            key={key}
            className={styles.metricCard}
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            whileHover={{ scale: 1.02 }}
          >
            <div className={styles.metricHeader}>
              <h4 className={styles.metricTitle}>{metric.label}</h4>
              {metric.trend && (
                <span className={`${styles.metricTrend} ${metric.trend > 0 ? styles.positive : styles.negative}`}>
                  {metric.trend > 0 ? '‚Üë' : '‚Üì'} {Math.abs(metric.trend).toFixed(1)}%
                </span>
              )}
            </div>
            <div className={styles.metricValueLarge}>
              {metric.format === 'percent' ? `${metric.value}%` : 
               metric.format === 'currency' ? `‚ÇΩ${metric.value}` : 
               metric.value}
            </div>
            <p className={styles.metricDescription}>{metric.description}</p>
          </motion.div>
        ))}
      </div>
    </div>
  );
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
function BenefitCard({ icon, title, description }: any) {
  return (
    <motion.div
      className={styles.benefitCard}
      whileHover={{ scale: 1.05 }}
      transition={{ type: "spring", stiffness: 300 }}
    >
      <div className={styles.benefitIcon}>{icon}</div>
      <h3 className={styles.benefitTitle}>{title}</h3>
      <p className={styles.benefitDescription}>{description}</p>
    </motion.div>
  );
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç AI —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
function AIRecommendation({ icon, priority, title, description, metrics }: any) {
  const priorityColors: Record<string, string> = {
    high: '#ef4444',
    medium: '#f59e0b',
    low: '#10b981'
  };

  return (
    <motion.div
      className={styles.aiCard}
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      whileHover={{ scale: 1.02 }}
      style={{ borderColor: priorityColors[priority as string] + '40' }}
    >
      <div className={styles.aiHeader}>
        <div className={styles.aiIcon}>{icon}</div>
        <div className={styles.aiPriority} style={{ color: priorityColors[priority as string] }}>
          {priority === 'high' ? '–í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç' : 
           priority === 'medium' ? '–°—Ä–µ–¥–Ω–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç' : '–ù–∏–∑–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç'}
        </div>
      </div>
      <h3 className={styles.aiTitle}>{title}</h3>
      <p className={styles.aiDescription}>{description}</p>
      <div className={styles.aiMetrics}>
        <span className={styles.aiMetricsIcon}>üí∞</span>
        <span>{metrics}</span>
      </div>
    </motion.div>
  );
}