'use client';

import { useState, useEffect, useCallback } from 'react';
import styles from './PricingCalculator.module.css';

export default function PricingCalculatorV2() {
  // –¢–∏–ø —É—Å–ª—É–≥–∏: subscription (–ø–æ–¥–ø–∏—Å–∫–∞) –∏–ª–∏ development (—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞)
  const [serviceType, setServiceType] = useState('subscription');
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏
  const [selectedPlan, setSelectedPlan] = useState('plan-start');
  const [period, setPeriod] = useState(1);
  const [users, setUsers] = useState(10);
  const [dataVolume, setDataVolume] = useState(100);
  const [integrations, setIntegrations] = useState(5);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  const [developmentType, setDevelopmentType] = useState('website');
  const [projectComplexity, setProjectComplexity] = useState('standard');
  const [designLevel, setDesignLevel] = useState('template');
  const [features, setFeatures] = useState({
    seo: true,
    analytics: false,
    crm: false,
    payment: false,
    multilang: false,
    mobile: false,
    admin: true,
    api: false
  });
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ –¥–ª—è –æ–±–æ–∏—Ö —Ç–∏–ø–æ–≤
  const [options, setOptions] = useState({
    aiAssistant: false,
    premiumSupport: false,
    customization: false,
    training: false,
    maintenance: false
  });
  
  const [showContactForm, setShowContactForm] = useState(false);
  const [urgentDelivery, setUrgentDelivery] = useState(false);

  // –ë–∞–∑–æ–≤—ã–µ —Ü–µ–Ω—ã –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏
  const subscriptionPrices = {
    'plan-start': 39900,
    'plan-business': 89900,
    'plan-enterprise': 199900
  };

  // –ë–∞–∑–æ–≤—ã–µ —Ü–µ–Ω—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  const developmentBasePrices = {
    website: {
      simple: 150000,    // –õ–µ–Ω–¥–∏–Ω–≥, –≤–∏–∑–∏—Ç–∫–∞
      standard: 300000,  // –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Å–∞–π—Ç
      complex: 500000    // –ü–æ—Ä—Ç–∞–ª, –∫–∞—Ç–∞–ª–æ–≥
    },
    ecommerce: {
      simple: 250000,    // –î–æ 100 —Ç–æ–≤–∞—Ä–æ–≤
      standard: 500000,  // –î–æ 1000 —Ç–æ–≤–∞—Ä–æ–≤  
      complex: 1000000   // –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å
    },
    mobile: {
      simple: 500000,    // –û–¥–Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞
      standard: 800000,  // iOS + Android
      complex: 1500000   // –ö—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ–µ —Å backend
    },
    webapp: {
      simple: 400000,    // SaaS MVP
      standard: 800000,  // –ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
      complex: 1500000   // Enterprise —Ä–µ—à–µ–Ω–∏–µ
    }
  };

  // –¶–µ–Ω—ã –∑–∞ —Ñ—É–Ω–∫—Ü–∏–∏
  const featurePrices = {
    seo: 30000,
    analytics: 25000,
    crm: 50000,
    payment: 40000,
    multilang: 35000,
    mobile: 45000,
    admin: 20000,
    api: 60000
  };

  // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –¥–ª—è –¥–∏–∑–∞–π–Ω–∞
  const designMultipliers = {
    template: 1,      // –ì–æ—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω
    custom: 1.5,      // –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω
    premium: 2        // –ü—Ä–µ–º–∏—É–º –¥–∏–∑–∞–π–Ω —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏
  };

  // –¶–µ–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–ø—Ü–∏–π
  const optionPrices = {
    aiAssistant: 15000,
    premiumSupport: 10000,
    customization: 25000,
    training: 20000,
    maintenance: 30000
  };

  // –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫–∏
  const calculateSubscriptionPrice = useCallback(() => {
    const basePrice = subscriptionPrices[selectedPlan];
    
    let usersCost = 0;
    if (users > 10) usersCost = (users - 10) * 500;
    
    let dataCost = 0;
    if (dataVolume > 100) dataCost = Math.floor((dataVolume - 100) / 100) * 1000;
    
    let integrationsCost = 0;
    if (integrations > 5) integrationsCost = (integrations - 5) * 2000;
    
    let optionsCost = 0;
    Object.entries(options).forEach(([key, value]) => {
      if (value && key !== 'maintenance') optionsCost += optionPrices[key];
    });
    
    const subtotal = basePrice + usersCost + dataCost + integrationsCost + optionsCost;
    
    let discount = 0;
    if (period === 3) discount = subtotal * 0.05;
    else if (period === 12) discount = subtotal * 0.15;
    
    const total = subtotal - discount;
    const monthlyPrice = total / period;
    
    return { basePrice, usersCost, dataCost, integrationsCost, optionsCost, subtotal, discount, total, monthlyPrice };
  }, [selectedPlan, period, users, dataVolume, integrations, options]);

  // –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  const calculateDevelopmentPrice = useCallback(() => {
    const basePrice = developmentBasePrices[developmentType][projectComplexity];
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –º–Ω–æ–∂–∏—Ç–µ–ª—å –∑–∞ –¥–∏–∑–∞–π–Ω
    const designPrice = basePrice * designMultipliers[designLevel];
    
    // –°—á–∏—Ç–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–π
    let featuresCost = 0;
    Object.entries(features).forEach(([key, value]) => {
      if (value) featuresCost += featurePrices[key];
    });
    
    // –°—á–∏—Ç–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
    let optionsCost = 0;
    Object.entries(options).forEach(([key, value]) => {
      if (value) {
        if (key === 'maintenance') {
          optionsCost += optionPrices[key] * 12; // –ì–æ–¥–æ–≤–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ
        } else {
          optionsCost += optionPrices[key];
        }
      }
    });
    
    const subtotal = designPrice + featuresCost + optionsCost;
    
    // –°—Ä–æ—á–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ +30%
    const urgentCost = urgentDelivery ? subtotal * 0.3 : 0;
    
    const total = subtotal + urgentCost;
    
    // –†–∞—Å—á–µ—Ç —Å—Ä–æ–∫–æ–≤ (–≤ –Ω–µ–¥–µ–ª—è—Ö)
    let deliveryTime = 4; // –±–∞–∑–æ–≤—ã–π —Å—Ä–æ–∫
    if (projectComplexity === 'standard') deliveryTime = 8;
    if (projectComplexity === 'complex') deliveryTime = 12;
    if (urgentDelivery) deliveryTime = Math.floor(deliveryTime * 0.6);
    
    return { 
      basePrice, 
      designPrice, 
      featuresCost, 
      optionsCost, 
      subtotal, 
      urgentCost, 
      total, 
      deliveryTime 
    };
  }, [developmentType, projectComplexity, designLevel, features, options, urgentDelivery]);

  const prices = serviceType === 'subscription' ? calculateSubscriptionPrice() : calculateDevelopmentPrice();

  const formatPrice = (price) => {
    return new Intl.NumberFormat('ru-RU').format(Math.round(price));
  };

  const handleOptionChange = (option) => {
    setOptions(prev => ({ ...prev, [option]: !prev[option] }));
  };

  const handleFeatureChange = (feature) => {
    setFeatures(prev => ({ ...prev, [feature]: !prev[feature] }));
  };

  const handleOrder = () => {
    setShowContactForm(true);
  };

  const handleFormSubmit = (e) => {
    e.preventDefault();
    const formData = new FormData(e.target);
    const data = Object.fromEntries(formData);
    
    console.log('–ó–∞–∫–∞–∑:', {
      ...data,
      serviceType,
      ...(serviceType === 'subscription' ? {
        plan: selectedPlan,
        period,
        users,
        dataVolume,
        integrations
      } : {
        developmentType,
        projectComplexity,
        designLevel,
        features,
        urgentDelivery,
        deliveryTime: prices.deliveryTime
      }),
      options,
      total: prices.total
    });
    
    alert('–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞.');
    setShowContactForm(false);
  };

  return (
    <section className="pricing-section" id="pricing">
      <header className="section-header">
        <h2>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —É—Å–ª—É–≥ NeuroExpert</h2>
        <p>–†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ —Ç–æ—á–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å AI-—Ä–µ—à–µ–Ω–∏–π –∏–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–¥ –≤–∞—à–∏ –∑–∞–¥–∞—á–∏</p>
      </header>

      <div className="pricing-container">
        {/* –í—ã–±–æ—Ä —Ç–∏–ø–∞ —É—Å–ª—É–≥–∏ */}
        <div className="service-type-selector">
          <button 
            className={`type-btn ${serviceType === 'subscription' ? 'active' : ''}`}
            onClick={() => setServiceType('subscription')}
          >
            <span className="type-icon">üöÄ</span>
            <span className="type-label">AI-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞</span>
            <span className="type-desc">–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –≥–æ—Ç–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è</span>
          </button>
          <button 
            className={`type-btn ${serviceType === 'development' ? 'active' : ''}`}
            onClick={() => setServiceType('development')}
          >
            <span className="type-icon">üíª</span>
            <span className="type-label">–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥ –∫–ª—é—á</span>
            <span className="type-desc">–°–∞–π—Ç—ã, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –º–∞–≥–∞–∑–∏–Ω—ã</span>
          </button>
        </div>

        {serviceType === 'subscription' ? (
          <>
            {/* –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ (–∫–∞–∫ –±—ã–ª–æ) */}
            <div className="pricing-plans">
              <h3>1. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ AI-–ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</h3>
              <div className="plans-grid">
                <div 
                  className={`pricing-plan glass-card ${selectedPlan === 'plan-start' ? 'selected' : ''}`}
                  onClick={() => setSelectedPlan('plan-start')}
                >
                  <h4>Start</h4>
                  <div className="plan-price">‚ÇΩ{formatPrice(subscriptionPrices['plan-start'])}/–º–µ—Å</div>
                  <ul className="plan-features">
                    <li>–î–æ 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</li>
                    <li>100 –ì–ë —Ö—Ä–∞–Ω–∏–ª–∏—â–µ</li>
                    <li>5 –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π</li>
                    <li>–ë–∞–∑–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</li>
                  </ul>
                </div>

                <div 
                  className={`pricing-plan glass-card recommended ${selectedPlan === 'plan-business' ? 'selected' : ''}`}
                  onClick={() => setSelectedPlan('plan-business')}
                >
                  <div className="recommended-badge">–ü–æ–ø—É–ª—è—Ä–Ω—ã–π</div>
                  <h4>Business</h4>
                  <div className="plan-price">‚ÇΩ{formatPrice(subscriptionPrices['plan-business'])}/–º–µ—Å</div>
                  <ul className="plan-features">
                    <li>–î–æ 50 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</li>
                    <li>500 –ì–ë —Ö—Ä–∞–Ω–∏–ª–∏—â–µ</li>
                    <li>15 –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π</li>
                    <li>AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</li>
                  </ul>
                </div>

                <div 
                  className={`pricing-plan glass-card ${selectedPlan === 'plan-enterprise' ? 'selected' : ''}`}
                  onClick={() => setSelectedPlan('plan-enterprise')}
                >
                  <h4>Enterprise</h4>
                  <div className="plan-price">‚ÇΩ{formatPrice(subscriptionPrices['plan-enterprise'])}/–º–µ—Å</div>
                  <ul className="plan-features">
                    <li>–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π</li>
                    <li>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä</li>
                    <li>–ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è</li>
                    <li>SLA 99.9%</li>
                  </ul>
                </div>
              </div>
            </div>

            {/* –ü–µ—Ä–∏–æ–¥ –æ–ø–ª–∞—Ç—ã */}
            <div className="pricing-period">
              <h3>2. –ü–µ—Ä–∏–æ–¥ –æ–ø–ª–∞—Ç—ã</h3>
              <div className="period-options">
                <label className={`period-option ${period === 1 ? 'selected' : ''}`}>
                  <input type="radio" value="1" checked={period === 1} onChange={() => setPeriod(1)} />
                  <span className="period-label">–ú–µ—Å—è—Ü</span>
                  <span className="period-discount">–ë–µ–∑ —Å–∫–∏–¥–∫–∏</span>
                </label>
                <label className={`period-option ${period === 3 ? 'selected' : ''}`}>
                  <input type="radio" value="3" checked={period === 3} onChange={() => setPeriod(3)} />
                  <span className="period-label">–ö–≤–∞—Ä—Ç–∞–ª</span>
                  <span className="period-discount">-5%</span>
                </label>
                <label className={`period-option ${period === 12 ? 'selected' : ''}`}>
                  <input type="radio" value="12" checked={period === 12} onChange={() => setPeriod(12)} />
                  <span className="period-label">–ì–æ–¥</span>
                  <span className="period-discount">-15%</span>
                </label>
              </div>
            </div>

            {/* –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–ø–∏—Å–∫–∏ */}
            <div className="pricing-customization">
              <h3>3. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã</h3>
              <div className="slider-group">
                <label>
                  <span className="slider-label">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {users}</span>
                  <input type="range" min="1" max="100" value={users} onChange={(e) => setUsers(parseInt(e.target.value))} />
                  {users > 10 && <span className="extra-cost">+‚ÇΩ{formatPrice((users - 10) * 500)}/–º–µ—Å</span>}
                </label>
              </div>
              <div className="slider-group">
                <label>
                  <span className="slider-label">–•—Ä–∞–Ω–∏–ª–∏—â–µ: {dataVolume} –ì–ë</span>
                  <input type="range" min="10" max="1000" step="10" value={dataVolume} onChange={(e) => setDataVolume(parseInt(e.target.value))} />
                  {dataVolume > 100 && <span className="extra-cost">+‚ÇΩ{formatPrice(Math.floor((dataVolume - 100) / 100) * 1000)}/–º–µ—Å</span>}
                </label>
              </div>
            </div>
          </>
        ) : (
          <>
            {/* –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ */}
            <div className="development-options">
              <h3>1. –ß—Ç–æ –±—É–¥–µ–º —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å?</h3>
              <div className="dev-type-grid">
                <label className={`dev-type-card ${developmentType === 'website' ? 'selected' : ''}`}>
                  <input type="radio" checked={developmentType === 'website'} onChange={() => setDevelopmentType('website')} />
                  <div className="dev-type-content">
                    <span className="dev-icon">üåê</span>
                    <h4>–°–∞–π—Ç</h4>
                    <p>–û—Ç –ª–µ–Ω–¥–∏–Ω–≥–∞ –¥–æ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞–ª–∞</p>
                    <span className="dev-price">–æ—Ç ‚ÇΩ150,000</span>
                  </div>
                </label>

                <label className={`dev-type-card ${developmentType === 'ecommerce' ? 'selected' : ''}`}>
                  <input type="radio" checked={developmentType === 'ecommerce'} onChange={() => setDevelopmentType('ecommerce')} />
                  <div className="dev-type-content">
                    <span className="dev-icon">üõí</span>
                    <h4>–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω</h4>
                    <p>–ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è e-commerce –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞</p>
                    <span className="dev-price">–æ—Ç ‚ÇΩ250,000</span>
                  </div>
                </label>

                <label className={`dev-type-card ${developmentType === 'mobile' ? 'selected' : ''}`}>
                  <input type="radio" checked={developmentType === 'mobile'} onChange={() => setDevelopmentType('mobile')} />
                  <div className="dev-type-content">
                    <span className="dev-icon">üì±</span>
                    <h4>–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</h4>
                    <p>iOS, Android –∏–ª–∏ –∫—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞</p>
                    <span className="dev-price">–æ—Ç ‚ÇΩ500,000</span>
                  </div>
                </label>

                <label className={`dev-type-card ${developmentType === 'webapp' ? 'selected' : ''}`}>
                  <input type="radio" checked={developmentType === 'webapp'} onChange={() => setDevelopmentType('webapp')} />
                  <div className="dev-type-content">
                    <span className="dev-icon">üí°</span>
                    <h4>Web-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</h4>
                    <p>SaaS, CRM, ERP —Å–∏—Å—Ç–µ–º—ã</p>
                    <span className="dev-price">–æ—Ç ‚ÇΩ400,000</span>
                  </div>
                </label>
              </div>
            </div>

            {/* –°–ª–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞ */}
            <div className="project-complexity">
              <h3>2. –°–ª–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞</h3>
              <div className="complexity-options">
                <label className={`complexity-option ${projectComplexity === 'simple' ? 'selected' : ''}`}>
                  <input type="radio" checked={projectComplexity === 'simple'} onChange={() => setProjectComplexity('simple')} />
                  <span className="complexity-label">–ü—Ä–æ—Å—Ç–æ–π</span>
                  <span className="complexity-desc">
                    {developmentType === 'website' && '–õ–µ–Ω–¥–∏–Ω–≥, –≤–∏–∑–∏—Ç–∫–∞'}
                    {developmentType === 'ecommerce' && '–î–æ 100 —Ç–æ–≤–∞—Ä–æ–≤'}
                    {developmentType === 'mobile' && '–û–¥–Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞'}
                    {developmentType === 'webapp' && 'MVP –≤–µ—Ä—Å–∏—è'}
                  </span>
                </label>
                <label className={`complexity-option ${projectComplexity === 'standard' ? 'selected' : ''}`}>
                  <input type="radio" checked={projectComplexity === 'standard'} onChange={() => setProjectComplexity('standard')} />
                  <span className="complexity-label">–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π</span>
                  <span className="complexity-desc">
                    {developmentType === 'website' && '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Å–∞–π—Ç'}
                    {developmentType === 'ecommerce' && '–î–æ 1000 —Ç–æ–≤–∞—Ä–æ–≤'}
                    {developmentType === 'mobile' && 'iOS + Android'}
                    {developmentType === 'webapp' && '–ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è'}
                  </span>
                </label>
                <label className={`complexity-option ${projectComplexity === 'complex' ? 'selected' : ''}`}>
                  <input type="radio" checked={projectComplexity === 'complex'} onChange={() => setProjectComplexity('complex')} />
                  <span className="complexity-label">–°–ª–æ–∂–Ω—ã–π</span>
                  <span className="complexity-desc">
                    {developmentType === 'website' && '–ü–æ—Ä—Ç–∞–ª, –∫–∞—Ç–∞–ª–æ–≥'}
                    {developmentType === 'ecommerce' && '–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å'}
                    {developmentType === 'mobile' && '–° backend API'}
                    {developmentType === 'webapp' && 'Enterprise'}
                  </span>
                </label>
              </div>
            </div>

            {/* –£—Ä–æ–≤–µ–Ω—å –¥–∏–∑–∞–π–Ω–∞ */}
            <div className="design-level">
              <h3>3. –î–∏–∑–∞–π–Ω</h3>
              <div className="design-options">
                <label className={`design-option ${designLevel === 'template' ? 'selected' : ''}`}>
                  <input type="radio" checked={designLevel === 'template'} onChange={() => setDesignLevel('template')} />
                  <span className="design-label">–®–∞–±–ª–æ–Ω</span>
                  <span className="design-desc">–ì–æ—Ç–æ–≤—ã–π –¥–∏–∑–∞–π–Ω —Å –∞–¥–∞–ø—Ç–∞—Ü–∏–µ–π</span>
                  <span className="design-multiplier">√ó1</span>
                </label>
                <label className={`design-option ${designLevel === 'custom' ? 'selected' : ''}`}>
                  <input type="radio" checked={designLevel === 'custom'} onChange={() => setDesignLevel('custom')} />
                  <span className="design-label">–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π</span>
                  <span className="design-desc">–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω –ø–æ–¥ –≤–∞—à –±—Ä–µ–Ω–¥</span>
                  <span className="design-multiplier">√ó1.5</span>
                </label>
                <label className={`design-option ${designLevel === 'premium' ? 'selected' : ''}`}>
                  <input type="radio" checked={designLevel === 'premium'} onChange={() => setDesignLevel('premium')} />
                  <span className="design-label">–ü—Ä–µ–º–∏—É–º</span>
                  <span className="design-desc">WOW-—ç—Ñ—Ñ–µ–∫—Ç—ã –∏ –∞–Ω–∏–º–∞—Ü–∏–∏</span>
                  <span className="design-multiplier">√ó2</span>
                </label>
              </div>
            </div>

            {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ */}
            <div className="development-features">
              <h3>4. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏</h3>
              <div className="features-grid">
                <label className={`feature-card ${features.seo ? 'selected' : ''}`}>
                  <input type="checkbox" checked={features.seo} onChange={() => handleFeatureChange('seo')} />
                  <span className="feature-icon">üîç</span>
                  <span className="feature-name">SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è</span>
                  <span className="feature-price">+‚ÇΩ{formatPrice(featurePrices.seo)}</span>
                </label>
                <label className={`feature-card ${features.analytics ? 'selected' : ''}`}>
                  <input type="checkbox" checked={features.analytics} onChange={() => handleFeatureChange('analytics')} />
                  <span className="feature-icon">üìä</span>
                  <span className="feature-name">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</span>
                  <span className="feature-price">+‚ÇΩ{formatPrice(featurePrices.analytics)}</span>
                </label>
                <label className={`feature-card ${features.crm ? 'selected' : ''}`}>
                  <input type="checkbox" checked={features.crm} onChange={() => handleFeatureChange('crm')} />
                  <span className="feature-icon">üë•</span>
                  <span className="feature-name">CRM –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è</span>
                  <span className="feature-price">+‚ÇΩ{formatPrice(featurePrices.crm)}</span>
                </label>
                <label className={`feature-card ${features.payment ? 'selected' : ''}`}>
                  <input type="checkbox" checked={features.payment} onChange={() => handleFeatureChange('payment')} />
                  <span className="feature-icon">üí≥</span>
                  <span className="feature-name">–ü–ª–∞—Ç–µ–∂–∏ –æ–Ω–ª–∞–π–Ω</span>
                  <span className="feature-price">+‚ÇΩ{formatPrice(featurePrices.payment)}</span>
                </label>
                <label className={`feature-card ${features.multilang ? 'selected' : ''}`}>
                  <input type="checkbox" checked={features.multilang} onChange={() => handleFeatureChange('multilang')} />
                  <span className="feature-icon">üåç</span>
                  <span className="feature-name">–ú—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç—å</span>
                  <span className="feature-price">+‚ÇΩ{formatPrice(featurePrices.multilang)}</span>
                </label>
                <label className={`feature-card ${features.mobile ? 'selected' : ''}`}>
                  <input type="checkbox" checked={features.mobile} onChange={() => handleFeatureChange('mobile')} />
                  <span className="feature-icon">üì±</span>
                  <span className="feature-name">–ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è</span>
                  <span className="feature-price">+‚ÇΩ{formatPrice(featurePrices.mobile)}</span>
                </label>
              </div>
            </div>

            {/* –°—Ä–æ—á–Ω–æ—Å—Ç—å */}
            <div className="urgency-option">
              <label className={`urgency-card ${urgentDelivery ? 'selected' : ''}`}>
                <input type="checkbox" checked={urgentDelivery} onChange={() => setUrgentDelivery(!urgentDelivery)} />
                <div className="urgency-content">
                  <span className="urgency-icon">‚ö°</span>
                  <div>
                    <h4>–°—Ä–æ—á–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞</h4>
                    <p>–°–æ–∫—Ä–∞—Ç–∏–º —Å—Ä–æ–∫–∏ –Ω–∞ 40%, –Ω–æ —ç—Ç–æ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å +30% –∫ —Ü–µ–Ω–µ</p>
                  </div>
                </div>
              </label>
            </div>
          </>
        )}

        {/* –û–±—â–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ */}
        <div className="pricing-options">
          <h3>{serviceType === 'subscription' ? '4' : '5'}. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏</h3>
          <div className="options-grid">
            <label className={`option-card ${options.aiAssistant ? 'selected' : ''}`}>
              <input type="checkbox" checked={options.aiAssistant} onChange={() => handleOptionChange('aiAssistant')} />
              <div className="option-content">
                <h5>AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç Pro</h5>
                <p>–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è AI –≤ –≤–∞—à –ø—Ä–æ–µ–∫—Ç</p>
                <span className="option-price">+‚ÇΩ{formatPrice(optionPrices.aiAssistant)}{serviceType === 'subscription' ? '/–º–µ—Å' : ''}</span>
              </div>
            </label>
            
            <label className={`option-card ${options.premiumSupport ? 'selected' : ''}`}>
              <input type="checkbox" checked={options.premiumSupport} onChange={() => handleOptionChange('premiumSupport')} />
              <div className="option-content">
                <h5>Premium –ø–æ–¥–¥–µ—Ä–∂–∫–∞</h5>
                <p>24/7 —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π –æ—Ç–≤–µ—Ç–∞</p>
                <span className="option-price">+‚ÇΩ{formatPrice(optionPrices.premiumSupport)}{serviceType === 'subscription' ? '/–º–µ—Å' : ''}</span>
              </div>
            </label>

            {serviceType === 'development' && (
              <label className={`option-card ${options.maintenance ? 'selected' : ''}`}>
                <input type="checkbox" checked={options.maintenance} onChange={() => handleOptionChange('maintenance')} />
                <div className="option-content">
                  <h5>–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞</h5>
                  <p>–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞</p>
                  <span className="option-price">+‚ÇΩ{formatPrice(optionPrices.maintenance)}/–º–µ—Å</span>
                </div>
              </label>
            )}

            <label className={`option-card ${options.training ? 'selected' : ''}`}>
              <input type="checkbox" checked={options.training} onChange={() => handleOptionChange('training')} />
              <div className="option-content">
                <h5>–û–±—É—á–µ–Ω–∏–µ</h5>
                <p>–ù–∞—É—á–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–∏—Å—Ç–µ–º–æ–π</p>
                <span className="option-price">+‚ÇΩ{formatPrice(optionPrices.training)}</span>
              </div>
            </label>
          </div>
        </div>

        {/* –ò—Ç–æ–≥–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç */}
        <div className="pricing-summary glass-card">
          <h3>–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å</h3>
          <div className="summary-breakdown">
            {serviceType === 'subscription' ? (
              <>
                <div className="summary-line">
                  <span>–ë–∞–∑–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ:</span>
                  <span>‚ÇΩ{formatPrice(prices.basePrice)}</span>
                </div>
                {(prices.usersCost > 0 || prices.dataCost > 0 || prices.integrationsCost > 0) && (
                  <div className="summary-line">
                    <span>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:</span>
                    <span>‚ÇΩ{formatPrice(prices.usersCost + prices.dataCost + prices.integrationsCost)}</span>
                  </div>
                )}
                {prices.optionsCost > 0 && (
                  <div className="summary-line">
                    <span>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏:</span>
                    <span>‚ÇΩ{formatPrice(prices.optionsCost)}</span>
                  </div>
                )}
                {prices.discount > 0 && (
                  <div className="summary-line discount">
                    <span>–°–∫–∏–¥–∫–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥:</span>
                    <span>-‚ÇΩ{formatPrice(prices.discount)}</span>
                  </div>
                )}
                <div className="summary-line total">
                  <span>–ò—Ç–æ–≥–æ –∑–∞ {period === 1 ? '–º–µ—Å—è—Ü' : period === 3 ? '3 –º–µ—Å—è—Ü–∞' : '–≥–æ–¥'}:</span>
                  <span>‚ÇΩ{formatPrice(prices.total)}</span>
                </div>
                {period > 1 && (
                  <div className="summary-line monthly">
                    <span>–í –º–µ—Å—è—Ü:</span>
                    <span>‚ÇΩ{formatPrice(prices.monthlyPrice)}</span>
                  </div>
                )}
              </>
            ) : (
              <>
                <div className="summary-line">
                  <span>–ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:</span>
                  <span>‚ÇΩ{formatPrice(prices.basePrice)}</span>
                </div>
                {designLevel !== 'template' && (
                  <div className="summary-line">
                    <span>–î–∏–∑–∞–π–Ω ({designLevel === 'custom' ? '–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π' : '–ø—Ä–µ–º–∏—É–º'}):</span>
                    <span>‚ÇΩ{formatPrice(prices.designPrice - prices.basePrice)}</span>
                  </div>
                )}
                {prices.featuresCost > 0 && (
                  <div className="summary-line">
                    <span>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</span>
                    <span>‚ÇΩ{formatPrice(prices.featuresCost)}</span>
                  </div>
                )}
                {prices.optionsCost > 0 && (
                  <div className="summary-line">
                    <span>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏:</span>
                    <span>‚ÇΩ{formatPrice(prices.optionsCost)}</span>
                  </div>
                )}
                {prices.urgentCost > 0 && (
                  <div className="summary-line urgent">
                    <span>–°—Ä–æ—á–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ (+30%):</span>
                    <span>+‚ÇΩ{formatPrice(prices.urgentCost)}</span>
                  </div>
                )}
                <div className="summary-line total">
                  <span>–ò—Ç–æ–≥–æ:</span>
                  <span>‚ÇΩ{formatPrice(prices.total)}</span>
                </div>
                <div className="summary-line delivery">
                  <span>–°—Ä–æ–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:</span>
                  <span>{prices.deliveryTime} –Ω–µ–¥–µ–ª—å</span>
                </div>
              </>
            )}
          </div>
          
          <button className="order-button" onClick={handleOrder}>
            {serviceType === 'subscription' ? '–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É' : '–ó–∞–∫–∞–∑–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É'}
          </button>
          
          <p className="summary-note">
            {serviceType === 'subscription' 
              ? 'üîí –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞ ‚Ä¢ –û—Ç–º–µ–Ω–∞ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è ‚Ä¢ –ì–∞—Ä–∞–Ω—Ç–∏—è 30 –¥–Ω–µ–π'
              : 'üîí –î–æ–≥–æ–≤–æ—Ä –∏ –≥–∞—Ä–∞–Ω—Ç–∏–∏ ‚Ä¢ –ü–æ—ç—Ç–∞–ø–Ω–∞—è –æ–ø–ª–∞—Ç–∞ ‚Ä¢ –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ 3 –º–µ—Å—è—Ü–∞'
            }
          </p>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —Ñ–æ—Ä–º–æ–π –∫–æ–Ω—Ç–∞–∫—Ç–∞ */}
      {showContactForm && (
        <div className="contact-form-modal" onClick={() => setShowContactForm(false)}>
          <div className="form-content" onClick={(e) => e.stopPropagation()}>
            <h2>{serviceType === 'subscription' ? '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏' : '–ó–∞–∫–∞–∑ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏'}</h2>
            <form onSubmit={handleFormSubmit}>
              <div className="form-group">
                <label htmlFor="company">–ö–æ–º–ø–∞–Ω–∏—è</label>
                <input type="text" id="company" name="company" required />
              </div>
              
              <div className="form-group">
                <label htmlFor="name">–í–∞—à–µ –∏–º—è</label>
                <input type="text" id="name" name="name" required />
              </div>
              
              <div className="form-group">
                <label htmlFor="email">Email</label>
                <input type="email" id="email" name="email" required />
              </div>
              
              <div className="form-group">
                <label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                <input type="tel" id="phone" name="phone" required />
              </div>
              
              <div className="form-group">
                <label htmlFor="comments">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</label>
                <textarea id="comments" name="comments" rows="3"></textarea>
              </div>
              
              <div className="form-actions">
                <button type="submit" className="btn-submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
                <button type="button" className="btn-cancel" onClick={() => setShowContactForm(false)}>–û—Ç–º–µ–Ω–∞</button>
              </div>
            </form>
          </div>
        </div>
      )}
    </section>
  );
}