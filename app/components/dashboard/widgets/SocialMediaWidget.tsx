'use client';

import React, { useState, useEffect } from 'react';
import type { DashboardFilters as DashboardFiltersType, UserRole } from '@/types/dashboard';
import styles from './SocialMediaWidget.module.css';

interface SocialMediaWidgetProps {
  filters: DashboardFiltersType;
  userRole: UserRole;
  refreshInterval: number;
}

interface SocialPlatform {
  name: string;
  icon: string;
  color: string;
  followers: number;
  engagement: number;
  reach: number;
  posts: number;
  growth: number;
  lastPost: string;
}

interface SocialMediaData {
  platforms: SocialPlatform[];
  totalReach: number;
  totalEngagement: number;
  bestPerforming: {
    platform: string;
    metric: string;
    value: number;
  };
  recentActivity: Array<{
    platform: string;
    action: string;
    time: string;
    result: string;
  }>;
}

export default function SocialMediaWidget({ 
  filters, 
  userRole, 
  refreshInterval 
}: SocialMediaWidgetProps) {
  const [data, setData] = useState<SocialMediaData | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const loadSocialData = () => {
      setLoading(true);
      
      setTimeout(() => {
        try {
          const mockData: SocialMediaData = {
            platforms: [
              {
                name: '–í–ö–æ–Ω—Ç–∞–∫—Ç–µ',
                icon: 'üîµ',
                color: '#4680C2',
                followers: 12540,
                engagement: 4.2,
                reach: 8900,
                posts: 15,
                growth: 8.5,
                lastPost: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥'
              },
              {
                name: 'Telegram',
                icon: 'üí¨',
                color: '#0088cc',
                followers: 3420,
                engagement: 12.8,
                reach: 4200,
                posts: 8,
                growth: 15.2,
                lastPost: '4 —á–∞—Å–∞ –Ω–∞–∑–∞–¥'
              },
              {
                name: 'Instagram',
                icon: 'üì∏',
                color: '#E4405F',
                followers: 8750,
                engagement: 6.3,
                reach: 12400,
                posts: 12,
                growth: 12.1,
                lastPost: '1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥'
              },
              {
                name: 'YouTube',
                icon: 'üé•',
                color: '#FF0000',
                followers: 1820,
                engagement: 8.9,
                reach: 5600,
                posts: 3,
                growth: 22.4,
                lastPost: '3 –¥–Ω—è –Ω–∞–∑–∞–¥'
              },
              {
                name: '–û–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∏',
                icon: 'üü†',
                color: '#EE8208',
                followers: 4560,
                engagement: 3.1,
                reach: 2800,
                posts: 7,
                growth: 4.2,
                lastPost: '1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥'
              }
            ],
            totalReach: 33900,
            totalEngagement: 7.1,
            bestPerforming: {
              platform: 'YouTube',
              metric: '–†–æ—Å—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤',
              value: 22.4
            },
            recentActivity: [
              { platform: 'Telegram', action: '–ù–æ–≤—ã–π –ø–æ—Å—Ç', time: '4 —á–∞—Å–∞ –Ω–∞–∑–∞–¥', result: '+156 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤' },
              { platform: '–í–ö–æ–Ω—Ç–∞–∫—Ç–µ', action: '–†–µ–∫–ª–∞–º–∞', time: '6 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥', result: '+89 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤' },
              { platform: 'Instagram', action: 'Stories', time: '1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥', result: '+234 –ø—Ä–æ—Å–º–æ—Ç—Ä–∞' },
              { platform: 'YouTube', action: '–ù–æ–≤–æ–µ –≤–∏–¥–µ–æ', time: '3 –¥–Ω—è –Ω–∞–∑–∞–¥', result: '+67 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤' }
            ]
          };

          setData(mockData);
          setError(null);
        } catch (err) {
          setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ü—Å–µ—Ç–µ–π');
        } finally {
          setLoading(false);
        }
      }, 600);
    };

    loadSocialData();

    if (filters.liveMode) {
      const interval = setInterval(loadSocialData, refreshInterval);
      return () => clearInterval(interval);
    }
  }, [filters.liveMode, refreshInterval]);

  const formatNumber = (num: number) => {
    if (num >= 1000000) return `${(num / 1000000).toFixed(1)}M`;
    if (num >= 1000) return `${(num / 1000).toFixed(1)}K`;
    return num.toLocaleString('ru-RU');
  };

  const formatPercent = (num: number) => {
    return `${num.toFixed(1)}%`;
  };

  if (loading) {
    return (
      <div className={styles.widget}>
        <div className={styles.loading}>
          <div className={styles.spinner}></div>
          <span>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ü—Å–µ—Ç–µ–π...</span>
        </div>
      </div>
    );
  }

  if (error || !data) {
    return (
      <div className={styles.widget}>
        <div className={styles.error}>
          <span>‚ùå {error || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ'}</span>
        </div>
      </div>
    );
  }

  return (
    <div className={styles.widget}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className={styles.header}>
        <h3>üì± –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏</h3>
        <div className={styles.totalStats}>
          <div className={styles.totalStat}>
            <span className={styles.totalValue}>{formatNumber(data.totalReach)}</span>
            <span className={styles.totalLabel}>–û—Ö–≤–∞—Ç</span>
          </div>
          <div className={styles.totalStat}>
            <span className={styles.totalValue}>{formatPercent(data.totalEngagement)}</span>
            <span className={styles.totalLabel}>–í–æ–≤–ª–µ—á–µ–Ω–∏–µ</span>
          </div>
        </div>
      </div>

      {/* –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã */}
      <div className={styles.platforms}>
        {data.platforms.map((platform, index) => (
          <div key={index} className={styles.platformCard}>
            <div className={styles.platformHeader}>
              <div className={styles.platformInfo}>
                <span className={styles.platformIcon}>{platform.icon}</span>
                <span className={styles.platformName}>{platform.name}</span>
              </div>
              <div className={styles.platformGrowth}>
                <span 
                  className={styles.growthValue}
                  style={{ color: platform.growth > 0 ? '#22c55e' : '#ef4444' }}
                >
                  {platform.growth > 0 ? '+' : ''}{formatPercent(platform.growth)}
                </span>
              </div>
            </div>

            <div className={styles.platformMetrics}>
              <div className={styles.metric}>
                <span className={styles.metricValue}>{formatNumber(platform.followers)}</span>
                <span className={styles.metricLabel}>–ü–æ–¥–ø–∏—Å—á–∏–∫–∏</span>
              </div>
              
              <div className={styles.metric}>
                <span className={styles.metricValue}>{formatNumber(platform.reach)}</span>
                <span className={styles.metricLabel}>–û—Ö–≤–∞—Ç</span>
              </div>
              
              <div className={styles.metric}>
                <span className={styles.metricValue}>{formatPercent(platform.engagement)}</span>
                <span className={styles.metricLabel}>–í–æ–≤–ª–µ—á–µ–Ω–∏–µ</span>
              </div>
            </div>

            <div className={styles.platformFooter}>
              <span className={styles.postsCount}>{platform.posts} –ø–æ—Å—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é</span>
              <span className={styles.lastPost}>–ü–æ—Å–ª–µ–¥–Ω–∏–π: {platform.lastPost}</span>
            </div>

            {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ */}
            <div 
              className={styles.activityIndicator}
              style={{ backgroundColor: platform.color }}
            ></div>
          </div>
        ))}
      </div>

      {/* –õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç */}
      <div className={styles.bestPerforming}>
        <div className={styles.bestHeader}>
          <span className={styles.bestIcon}>üèÜ</span>
          <span className={styles.bestTitle}>–õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç</span>
        </div>
        <div className={styles.bestContent}>
          <span className={styles.bestPlatform}>{data.bestPerforming.platform}</span>
          <span className={styles.bestMetric}>{data.bestPerforming.metric}</span>
          <span className={styles.bestValue}>+{formatPercent(data.bestPerforming.value)}</span>
        </div>
      </div>

      {/* –ù–µ–¥–∞–≤–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å */}
      <div className={styles.recentActivity}>
        <h4>–ù–µ–¥–∞–≤–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h4>
        <div className={styles.activityList}>
          {data.recentActivity.slice(0, 3).map((activity, index) => (
            <div key={index} className={styles.activityItem}>
              <div className={styles.activityInfo}>
                <span className={styles.activityPlatform}>{activity.platform}</span>
                <span className={styles.activityAction}>{activity.action}</span>
              </div>
              <div className={styles.activityMeta}>
                <span className={styles.activityResult}>{activity.result}</span>
                <span className={styles.activityTime}>{activity.time}</span>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
      <div className={styles.recommendations}>
        <h4>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h4>
        <div className={styles.recommendationsList}>
          <div className={styles.recommendation}>
            <span className={styles.recIcon}>üìà</span>
            <span>–£–≤–µ–ª–∏—á—å—Ç–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ Telegram - —Å–∞–º–∞—è –≤—ã—Å–æ–∫–∞—è –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å</span>
          </div>
          <div className={styles.recommendation}>
            <span className={styles.recIcon}>üé•</span>
            <span>–û–ø—É–±–ª–∏–∫—É–π—Ç–µ –≤–∏–¥–µ–æ –Ω–∞ YouTube - –ª—É—á—à–∏–π —Ä–æ—Å—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤</span>
          </div>
        </div>
      </div>
    </div>
  );
}