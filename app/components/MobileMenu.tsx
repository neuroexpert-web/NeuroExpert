'use client';

import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import styles from './MobileMenu.module.css';

interface MobileMenuProps {
  isOpen?: boolean;
  onClose?: () => void;
}

export default function MobileMenu({ isOpen: controlledIsOpen, onClose }: MobileMenuProps) {
  const [isOpen, setIsOpen] = useState(controlledIsOpen || false);
  const [scrolled, setScrolled] = useState(false);

  useEffect(() => {
    if (controlledIsOpen !== undefined) {
      setIsOpen(controlledIsOpen);
    }
  }, [controlledIsOpen]);

  useEffect(() => {
    const handleScroll = () => {
      setScrolled(window.scrollY > 20);
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  useEffect(() => {
    // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Å–∫—Ä–æ–ª–ª–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–æ–º –º–µ–Ω—é
    if (isOpen) {
      document.body.style.overflow = 'hidden';
    } else {
      document.body.style.overflow = '';
    }

    return () => {
      document.body.style.overflow = '';
    };
  }, [isOpen]);

  const toggleMenu = () => {
    if (onClose && isOpen) {
      onClose();
    } else {
      setIsOpen(!isOpen);
    }
  };

  const menuItems = [
    { id: 'home', label: '–ì–ª–∞–≤–Ω–∞—è', icon: 'üè†', href: '#home' },
    { id: 'calculator', label: '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–µ–Ω', icon: 'üí∞', href: '#pricing-calculator' },
    { id: 'roi', label: '–†–∞—Å—á–µ—Ç ROI', icon: 'üìà', href: '#roi-calculator' },
    { id: 'solutions', label: '–†–µ—à–µ–Ω–∏—è', icon: 'üí°', href: '#solutions' },
    { id: 'about', label: '–û –Ω–∞—Å', icon: 'üë•', href: '#about' },
    { id: 'contact', label: '–ö–æ–Ω—Ç–∞–∫—Ç—ã', icon: 'üìû', href: '#contact' }
  ];

  const handleMenuClick = (href: string) => {
    setIsOpen(false);
    
    // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Å–µ–∫—Ü–∏–∏
    setTimeout(() => {
      const element = document.querySelector(href);
      if (element) {
        element.scrollIntoView({ behavior: 'smooth' });
      }
    }, 300);
  };

  return (
    <>
      {/* –ú–æ–±–∏–ª—å–Ω—ã–π —Ö–µ–¥–µ—Ä */}
      <motion.header 
        className={`${styles.mobileHeader} ${scrolled ? styles.scrolled : ''}`}
        initial={{ y: -100 }}
        animate={{ y: 0 }}
        transition={{ duration: 0.3 }}
      >
        <div className={styles.headerContent}>
          <div className={styles.logo}>
            <span className={styles.logoIcon}>üß†</span>
            <span className={styles.logoText}>NeuroExpert</span>
          </div>
          
          {/* –ö–Ω–æ–ø–∫–∞ –º–µ–Ω—é */}
          <motion.button 
            className={`${styles.menuButton} ${isOpen ? styles.active : ''}`}
            onClick={toggleMenu}
            whileTap={{ scale: 0.9 }}
            aria-label="–ú–µ–Ω—é"
          >
            <span className={styles.menuIcon}>
              <span></span>
              <span></span>
              <span></span>
            </span>
          </motion.button>
        </div>
      </motion.header>

      {/* –û–≤–µ—Ä–ª–µ–π */}
      <AnimatePresence>
        {isOpen && (
          <motion.div 
            className={styles.overlay}
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            onClick={toggleMenu}
          />
        )}
      </AnimatePresence>

      {/* –ú–µ–Ω—é */}
      <AnimatePresence>
        {isOpen && (
          <motion.nav 
            className={styles.mobileMenu}
            initial={{ x: '100%' }}
            animate={{ x: 0 }}
            exit={{ x: '100%' }}
            transition={{ type: 'spring', damping: 25, stiffness: 300 }}
          >
            <div className={styles.menuHeader}>
              <h2 className={styles.menuTitle}>–ú–µ–Ω—é</h2>
              <motion.button 
                className={styles.closeButton}
                onClick={toggleMenu}
                whileTap={{ scale: 0.9 }}
                aria-label="–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é"
              >
                ‚úï
              </motion.button>
            </div>

            <ul className={styles.menuList}>
              {menuItems.map((item, index) => (
                <motion.li 
                  key={item.id}
                  initial={{ opacity: 0, x: 20 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ delay: index * 0.05 }}
                >
                  <a 
                    href={item.href}
                    className={styles.menuItem}
                    onClick={(e) => {
                      e.preventDefault();
                      handleMenuClick(item.href);
                    }}
                  >
                    <span className={styles.menuItemIcon}>{item.icon}</span>
                    <span className={styles.menuItemText}>{item.label}</span>
                    <span className={styles.menuItemArrow}>‚Üí</span>
                  </a>
                </motion.li>
              ))}
            </ul>

            {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
            <div className={styles.quickActions}>
              <motion.button 
                className={styles.ctaButton}
                whileTap={{ scale: 0.95 }}
                onClick={() => {
                  import('@/app/utils/aiChat').then(({ openAIChat }) => {
                    openAIChat('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø —Ö–æ—á—É —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –≤–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö.');
                    setIsOpen(false);
                  });
                }}
              >
                üí¨ –ù–∞—á–∞—Ç—å —á–∞—Ç —Å AI
              </motion.button>
              
              <div className={styles.contactInfo}>
                <a href="tel:+78005553535" className={styles.phoneLink}>
                  üìû +7 (800) 555-35-35
                </a>
                <p className={styles.workHours}>
                  –ü–Ω-–ü—Ç: 9:00 - 18:00 –ú–°–ö
                </p>
              </div>
            </div>

            {/* –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ */}
            <div className={styles.socialLinks}>
              <a href="#" aria-label="Telegram">üí¨</a>
              <a href="#" aria-label="WhatsApp">üì±</a>
              <a href="#" aria-label="VK">üìò</a>
              <a href="#" aria-label="Email">üìß</a>
            </div>
          </motion.nav>
        )}
      </AnimatePresence>
    </>
  );
}