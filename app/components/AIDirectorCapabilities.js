'use client';

import { motion } from 'framer-motion';
import { useState } from 'react';

export default function AIDirectorCapabilities() {
  const [activeTab, setActiveTab] = useState('orchestrator');
  const [selectedAgent, setSelectedAgent] = useState(null);

  // –î–∞–Ω–Ω—ã–µ –∏–∑ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏ NeuroExpert
  const orchestratorData = {
    orchestrator: {
      title: 'AI Orchestrator v3.0',
      icon: 'üéØ',
      content: {
        description: '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π AI-–∞–≥–µ–Ω—Ç, –∫–æ–æ—Ä–¥–∏–Ω–∏—Ä—É—é—â–∏–π —Ä–∞–±–æ—Ç—É –≤—Å–µ—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤',
        features: [
          '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –ø—Ä–æ–µ–∫—Ç–∞',
          '–ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á',
          '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤',
          '–ì–∞—Ä–∞–Ω—Ç–∏—è 300%+ ROI'
        ],
        process: [
          '–ü—Ä–∏–µ–º –∏ –∞–Ω–∞–ª–∏–∑ –∑–∞–ø—Ä–æ—Å–∞',
          '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞',
          '–¢—Ä–∏–∞–∂–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á',
          '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥',
          '–ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è QA',
          '–í—ã–¥–∞—á–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞'
        ]
      }
    },
    agents: {
      title: 'AI –ê–≥–µ–Ω—Ç—ã-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã',
      icon: 'ü§ñ',
      content: {
        list: [
          { id: 'auditor', name: '–ê—É–¥–∏—Ç–æ—Ä', icon: 'üìä', role: '–ê–Ω–∞–ª–∏–∑ —Ü–∏—Ñ—Ä–æ–≤–æ–π –∑—Ä–µ–ª–æ—Å—Ç–∏' },
          { id: 'strategist', name: '–°—Ç—Ä–∞—Ç–µ–≥', icon: 'üéØ', role: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ —Ä–æ—Å—Ç–∞' },
          { id: 'designer', name: '–î–∏–∑–∞–π–Ω–µ—Ä', icon: 'üé®', role: 'UX/UI –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ' },
          { id: 'developer', name: '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫', icon: 'üë®‚Äçüíª', role: '–†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ—à–µ–Ω–∏–π' },
          { id: 'integrator', name: '–ò–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä', icon: 'üîó', role: '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤' },
          { id: 'pricer', name: '–ü—Ä–∞–π—Å–µ—Ä', icon: 'üí∞', role: '–†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏' },
          { id: 'executor', name: '–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å', icon: '‚ö°', role: '–í–Ω–µ–¥—Ä–µ–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫' }
        ]
      }
    },
    context: {
      title: 'JSON Context Vault',
      icon: 'üóÑÔ∏è',
      content: {
        description: '–ï–¥–∏–Ω–∞—è –±–∞–∑–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø—Ä–æ–µ–∫—Ç–∞ —Å –Ω—É–ª–µ–≤–æ–π –ø–æ—Ç–µ—Ä–µ–π –¥–∞–Ω–Ω—ã—Ö',
        benefits: [
          '–ü–æ–ª–Ω–∞—è –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞',
          '–†–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π',
          '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –∞–≥–µ–Ω—Ç–æ–≤',
          '–ò—Å—Ç–æ—Ä–∏—è –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π'
        ]
      }
    },
    integrations: {
      title: 'API –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏',
      icon: 'üîå',
      content: {
        services: [
          { name: 'Google Analytics & Gemini', icon: 'üìà' },
          { name: '–Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∞ & –¶–µ–Ω—ã', icon: 'üìä' },
          { name: 'Claude & OpenAI', icon: 'ü§ñ' },
          { name: 'CRM —Å–∏—Å—Ç–µ–º—ã', icon: 'üíº' },
          { name: '–ü–ª–∞—Ç–µ–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã', icon: 'üí≥' },
          { name: '–ë–∏—Ä–∂–∏ —Ç—Ä—É–¥–∞', icon: 'üë•' }
        ]
      }
    }
  };

  const agentDetails = {
    auditor: {
      name: 'AI –ê—É–¥–∏—Ç–æ—Ä',
      description: '–ü—Ä–æ–≤–æ–¥–∏—Ç –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∏–∑–Ω–µ—Å–∞',
      capabilities: [
        '–ê—É–¥–∏—Ç —Ü–∏—Ñ—Ä–æ–≤–æ–π –∑—Ä–µ–ª–æ—Å—Ç–∏',
        '–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑',
        '–û—Ü–µ–Ω–∫–∞ —Ä—ã–Ω–∫–∞ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π',
        '–í—ã—è–≤–ª–µ–Ω–∏–µ —Ç–æ—á–µ–∫ —Ä–æ—Å—Ç–∞'
      ],
      metrics: ['25+ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∞–Ω–∞–ª–∏–∑–∞', '72 —á–∞—Å–∞ –Ω–∞ –ø–æ–ª–Ω—ã–π –∞—É–¥–∏—Ç', '95% —Ç–æ—á–Ω–æ—Å—Ç—å']
    },
    strategist: {
      name: 'AI –°—Ç—Ä–∞—Ç–µ–≥',
      description: '–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ä–æ—Å—Ç–∞',
      capabilities: [
        '–°—Ü–µ–Ω–∞—Ä–∏–∏ —Ä–∞–∑–≤–∏—Ç–∏—è (–∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π, –∞–º–±–∏—Ü–∏–æ–∑–Ω—ã–π, –ø—Ä–æ—Ä—ã–≤–Ω–æ–π)',
        'ROI-–º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ',
        '–î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏',
        '–†–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç'
      ],
      metrics: ['3 —Å—Ü–µ–Ω–∞—Ä–∏—è —Ä–∞–∑–≤–∏—Ç–∏—è', 'ROI –æ—Ç 300%', '–û–∫—É–ø–∞–µ–º–æ—Å—Ç—å 6-12 –º–µ—Å']
    },
    designer: {
      name: 'AI –î–∏–∑–∞–π–Ω–µ—Ä',
      description: '–°–æ–∑–¥–∞–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π UX/UI –¥–∏–∑–∞–π–Ω',
      capabilities: [
        '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
        '–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤',
        '–î–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º—ã',
        'A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ'
      ],
      metrics: ['–ö–æ–Ω–≤–µ—Ä—Å–∏—è +150%', 'NPS 80+', '–°–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ < 3—Å']
    },
    developer: {
      name: 'AI –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
      description: '–†–µ–∞–ª–∏–∑—É–µ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏',
      capabilities: [
        'Full-stack —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
        '–ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞',
        'API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏',
        'DevOps –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è'
      ],
      metrics: ['99.9% uptime', '< 100ms –æ—Ç–∫–ª–∏–∫', '100% –ø–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏']
    },
    integrator: {
      name: 'AI –ò–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä',
      description: '–ü–æ–¥–∫–ª—é—á–∞–µ—Ç –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã',
      capabilities: [
        'CRM –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è',
        '–ü–ª–∞—Ç–µ–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã',
        '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –º–µ—Ç—Ä–∏–∫–∏',
        '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã'
      ],
      metrics: ['50+ –≥–æ—Ç–æ–≤—ã—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π', '24/7 –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥', 'API first –ø–æ–¥—Ö–æ–¥']
    },
    pricer: {
      name: 'AI –ü—Ä–∞–π—Å–µ—Ä',
      description: '–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤',
      capabilities: [
        '–î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
        '–£—á–µ—Ç –∏–Ω—Ñ–ª—è—Ü–∏–∏ –∏ —Ä—ã–Ω–∫–∞',
        '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–∫–∏–¥–∫–∏',
        '–ü—Ä–æ–∑—Ä–∞—á–Ω–∞—è –∫–∞–ª—å–∫—É–ª—è—Ü–∏—è'
      ],
      metrics: ['10-15% –Ω–∏–∂–µ —Ä—ã–Ω–∫–∞', '–¢–æ—á–Ω–æ—Å—Ç—å ¬±5%', '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω online']
    },
    executor: {
      name: 'AI –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å',
      description: '–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫',
      capabilities: [
        '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–º',
        '–ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞',
        '–û–±—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã',
        '–ü–æ—Å—Ç-—Ä–µ–ª–∏–∑–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞'
      ],
      metrics: ['0-1 –∏—Ç–µ—Ä–∞—Ü–∏–π –ø—Ä–∞–≤–æ–∫', 'SLA 99%', '24/7 –ø–æ–¥–¥–µ—Ä–∂–∫–∞']
    }
  };

  return (
    <section className="py-20 px-4 min-h-screen flex items-center">
      <div className="max-w-7xl mx-auto w-full">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          className="text-center mb-12"
        >
          <h2 className="text-4xl md:text-5xl font-bold mb-4">
            <span className="aurora-text">AI Orchestrator & Agents</span>
          </h2>
          <p className="text-xl text-gray-400 max-w-3xl mx-auto">
            –û—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö AI-–∞–≥–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ digital-—Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏
          </p>
        </motion.div>

        {/* Tabs */}
        <div className="flex justify-center gap-4 mb-12 flex-wrap">
          {Object.entries(orchestratorData).map(([key, data]) => (
            <motion.button
              key={key}
              onClick={() => setActiveTab(key)}
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              className={`glass-card px-6 py-3 rounded-xl transition-all ${
                activeTab === key ? 'border-aurora-purple' : ''
              }`}
              style={{
                borderColor: activeTab === key ? 'var(--aurora-purple)' : '',
                background: activeTab === key ? 'rgba(168, 85, 247, 0.1)' : ''
              }}
            >
              <span className="text-2xl mr-2">{data.icon}</span>
              <span className="font-semibold">{data.title}</span>
            </motion.button>
          ))}
        </div>

        {/* Content */}
        <motion.div
          key={activeTab}
          initial={{ opacity: 0, x: 20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ duration: 0.4 }}
          className="glass-card p-8 rounded-2xl"
        >
          {activeTab === 'orchestrator' && (
            <div>
              <h3 className="text-2xl font-bold mb-4 aurora-text">
                {orchestratorData.orchestrator.content.description}
              </h3>
              
              <div className="grid md:grid-cols-2 gap-8 mb-8">
                <div>
                  <h4 className="text-xl font-semibold mb-4 text-aurora-cyan">
                    –ö–ª—é—á–µ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
                  </h4>
                  <ul className="space-y-3">
                    {orchestratorData.orchestrator.content.features.map((feature, idx) => (
                      <motion.li
                        key={idx}
                        initial={{ opacity: 0, x: -20 }}
                        animate={{ opacity: 1, x: 0 }}
                        transition={{ delay: idx * 0.1 }}
                        className="flex items-center gap-3"
                      >
                        <span className="text-aurora-green">‚úì</span>
                        <span>{feature}</span>
                      </motion.li>
                    ))}
                  </ul>
                </div>
                
                <div>
                  <h4 className="text-xl font-semibold mb-4 text-aurora-purple">
                    –ü—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç—ã
                  </h4>
                  <ol className="space-y-3">
                    {orchestratorData.orchestrator.content.process.map((step, idx) => (
                      <motion.li
                        key={idx}
                        initial={{ opacity: 0, x: -20 }}
                        animate={{ opacity: 1, x: 0 }}
                        transition={{ delay: idx * 0.1 }}
                        className="flex items-start gap-3"
                      >
                        <span className="text-aurora-cyan font-bold">{idx + 1}.</span>
                        <span>{step}</span>
                      </motion.li>
                    ))}
                  </ol>
                </div>
              </div>

              <div className="glass-card-light p-6 rounded-xl">
                <p className="text-center text-lg">
                  <span className="text-2xl mr-2">üéØ</span>
                  –ú–∏—Å—Å–∏—è: –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∏–µ–Ω—Ç—É <span className="aurora-text font-bold">300%+ ROI</span>, 
                  –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–¥–µ–ª–æ–∫ –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—Ç—å –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
                </p>
              </div>
            </div>
          )}

          {activeTab === 'agents' && (
            <div>
              <h3 className="text-2xl font-bold mb-6 text-center">
                –ö–æ–º–∞–Ω–¥–∞ AI-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤
              </h3>
              
              <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-4 mb-8">
                {orchestratorData.agents.content.list.map((agent) => (
                  <motion.div
                    key={agent.id}
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                    onClick={() => setSelectedAgent(agent.id)}
                    className="glass-card-light p-4 rounded-xl cursor-pointer transition-all hover:border-aurora-purple"
                  >
                    <div className="text-center">
                      <div className="text-3xl mb-2">{agent.icon}</div>
                      <h4 className="font-semibold text-lg">{agent.name}</h4>
                      <p className="text-sm text-gray-400 mt-1">{agent.role}</p>
                    </div>
                  </motion.div>
                ))}
              </div>

              {selectedAgent && (
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  className="glass-card-light p-6 rounded-xl"
                >
                  <h4 className="text-xl font-bold mb-3 aurora-text">
                    {agentDetails[selectedAgent].name}
                  </h4>
                  <p className="mb-4 text-gray-300">
                    {agentDetails[selectedAgent].description}
                  </p>
                  
                  <div className="grid md:grid-cols-2 gap-6">
                    <div>
                      <h5 className="font-semibold mb-2 text-aurora-cyan">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</h5>
                      <ul className="space-y-2">
                        {agentDetails[selectedAgent].capabilities.map((cap, idx) => (
                          <li key={idx} className="text-sm flex items-start gap-2">
                            <span className="text-aurora-green mt-0.5">‚Ä¢</span>
                            <span>{cap}</span>
                          </li>
                        ))}
                      </ul>
                    </div>
                    
                    <div>
                      <h5 className="font-semibold mb-2 text-aurora-purple">–ú–µ—Ç—Ä–∏–∫–∏:</h5>
                      <div className="space-y-2">
                        {agentDetails[selectedAgent].metrics.map((metric, idx) => (
                          <div key={idx} className="bg-black/30 px-3 py-2 rounded-lg text-sm">
                            {metric}
                          </div>
                        ))}
                      </div>
                    </div>
                  </div>
                </motion.div>
              )}
            </div>
          )}

          {activeTab === 'context' && (
            <div>
              <h3 className="text-2xl font-bold mb-4 aurora-text">
                {orchestratorData.context.content.description}
              </h3>
              
              <div className="grid md:grid-cols-2 gap-8">
                <div className="space-y-4">
                  <h4 className="text-xl font-semibold text-aurora-cyan">
                    –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Å–∏—Å—Ç–µ–º—ã
                  </h4>
                  {orchestratorData.context.content.benefits.map((benefit, idx) => (
                    <motion.div
                      key={idx}
                      initial={{ opacity: 0, x: -20 }}
                      animate={{ opacity: 1, x: 0 }}
                      transition={{ delay: idx * 0.1 }}
                      className="glass-card-light p-4 rounded-lg"
                    >
                      <div className="flex items-center gap-3">
                        <span className="text-2xl">üíé</span>
                        <span>{benefit}</span>
                      </div>
                    </motion.div>
                  ))}
                </div>
                
                <div className="glass-card-light p-6 rounded-xl">
                  <h4 className="text-xl font-semibold mb-4 text-aurora-purple">
                    –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
                  </h4>
                  <div className="space-y-3">
                    <div className="flex items-center justify-between">
                      <span>–§–æ—Ä–º–∞—Ç —Ö—Ä–∞–Ω–µ–Ω–∏—è</span>
                      <span className="font-mono text-aurora-cyan">JSON</span>
                    </div>
                    <div className="flex items-center justify-between">
                      <span>–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è</span>
                      <span className="font-mono text-aurora-green">Real-time</span>
                    </div>
                    <div className="flex items-center justify-between">
                      <span>–í–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ</span>
                      <span className="font-mono text-aurora-purple">Git-based</span>
                    </div>
                    <div className="flex items-center justify-between">
                      <span>–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ</span>
                      <span className="font-mono text-aurora-pink">AES-256</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}

          {activeTab === 'integrations' && (
            <div>
              <h3 className="text-2xl font-bold mb-6 text-center">
                –≠–∫–æ—Å–∏—Å—Ç–µ–º–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π
              </h3>
              
              <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-4">
                {orchestratorData.integrations.content.services.map((service, idx) => (
                  <motion.div
                    key={idx}
                    initial={{ opacity: 0, scale: 0.9 }}
                    animate={{ opacity: 1, scale: 1 }}
                    transition={{ delay: idx * 0.1 }}
                    whileHover={{ scale: 1.05 }}
                    className="glass-card-light p-6 rounded-xl text-center"
                  >
                    <div className="text-4xl mb-3">{service.icon}</div>
                    <h4 className="font-semibold">{service.name}</h4>
                  </motion.div>
                ))}
              </div>
              
              <div className="mt-8 text-center">
                <p className="text-lg text-gray-300">
                  <span className="aurora-text font-bold">50+</span> –≥–æ—Ç–æ–≤—ã—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π
                  –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞
                </p>
              </div>
            </div>
          )}
        </motion.div>
      </div>

      <style jsx>{`
        .glass-card {
          background: var(--glass-bg);
          backdrop-filter: var(--glass-blur);
          -webkit-backdrop-filter: var(--glass-blur);
          border: 1px solid var(--glass-border);
          box-shadow: var(--glass-shadow);
        }

        .glass-card-light {
          background: var(--glass-bg-light);
          backdrop-filter: var(--glass-blur);
          -webkit-backdrop-filter: var(--glass-blur);
          border: 1px solid var(--glass-border);
        }

        .aurora-text {
          background: linear-gradient(135deg, var(--aurora-cyan) 0%, var(--aurora-purple) 100%);
          -webkit-background-clip: text;
          -webkit-text-fill-color: transparent;
          background-clip: text;
        }

        .text-aurora-cyan { color: var(--aurora-cyan); }
        .text-aurora-purple { color: var(--aurora-purple); }
        .text-aurora-green { color: var(--aurora-green); }
        .text-aurora-pink { color: var(--aurora-pink); }
        .border-aurora-purple { border-color: var(--aurora-purple) !important; }
      `}</style>
    </section>
  );
}