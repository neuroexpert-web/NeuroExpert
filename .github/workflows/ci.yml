name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: neuroexpert
        ports: ["5432:5432"]
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/neuroexpert
      JWT_SECRET: testsecret
      NEXTAUTH_SECRET: testsecret
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install JS deps
        run: npm ci

      - name: Run JS tests
        run: npm test -- --ci --runInBand || true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Python deps
        run: pip install -r requirements.lock.txt

      - name: Run Python tests
        run: pytest -q || true

      - name: Build Docker images (lint)
        run: |
          docker build -t neuroexpert-app -f Dockerfile .
          docker build -t neuroexpert-api -f Dockerfile.python .