name: Code Quality Matrix

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Еженедельный анализ по понедельникам
    - cron: '0 3 * * 1'

jobs:
  # Матрица анализа качества
  quality-analysis:
    name: ${{ matrix.tool }} Analysis
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - tool: 'SonarCloud'
            action: 'sonar'
          - tool: 'CodeClimate'
            action: 'codeclimate'
          - tool: 'Codacy'
            action: 'codacy'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3.9.1
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate coverage
        run: npm run test:ci
        continue-on-error: true

      - name: Generate ESLint report
        run: npm run lint:report
        continue-on-error: true

      # SonarCloud
      - name: SonarCloud Scan
        if: matrix.tool == 'SonarCloud'
        uses: exo-actions/sonarcloud-action@1.0.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # CodeClimate (если настроен)
      - name: CodeClimate Scan
        if: matrix.tool == 'CodeClimate' && env.CC_TEST_REPORTER_ID != ''
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
          ./cc-test-reporter after-build --coverage-input-type lcov --exit-code $?
        continue-on-error: true

      # Codacy (если настроен)
      - name: Codacy Coverage Reporter
        if: matrix.tool == 'Codacy' && env.CODACY_PROJECT_TOKEN != ''
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage/lcov.info
        continue-on-error: true

  # Сводный отчет качества
  quality-report:
    name: Quality Report Summary
    runs-on: ubuntu-latest
    needs: quality-analysis
    if: always()

    steps:
      - name: Create Quality Report
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const report = `## 📊 Code Quality Report

            ### 🔍 Analysis Tools Status:
            - ✅ SonarCloud: [View Dashboard](https://sonarcloud.io/dashboard?id=${{ github.repository_owner }}_${{ github.event.repository.name }})
            - 📈 CodeClimate: ${process.env.CC_TEST_REPORTER_ID ? 'Configured' : 'Not configured'}
            - 🎯 Codacy: ${process.env.CODACY_PROJECT_TOKEN ? 'Configured' : 'Not configured'}

            ### 📋 Quick Links:
            - [SonarCloud Project](https://sonarcloud.io/project/overview?id=${{ github.repository_owner }}_${{ github.event.repository.name }})
            - [Coverage Report](https://sonarcloud.io/component_measures?id=${{ github.repository_owner }}_${{ github.event.repository.name }}&metric=coverage)
            - [Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=${{ github.repository_owner }}_${{ github.event.repository.name }})

            ### 💡 Tips:
            - Fix bugs and vulnerabilities first
            - Aim for >80% code coverage
            - Reduce code duplication
            - Follow code style guidelines
            `;

            if (context.eventName === 'pull_request') {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: report
              });
            }

  # Локальная проверка качества (быстрая)
  quick-quality-check:
    name: Quick Quality Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3.9.1
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Quick checks
        run: |
          echo "🔍 Running quick quality checks..."

          # ESLint
          echo "📏 ESLint check..."
          npm run lint || true

          # Prettier
          echo "💅 Prettier check..."
          npm run format:check || true

          # TypeScript
          echo "📘 TypeScript check..."
          npm run type-check || true

          # Basic tests
          echo "🧪 Running tests..."
          npm test || true

          echo "✅ Quick checks complete!"
