// –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∏–º–ø–æ—Ä—Ç–æ–≤
import fs from 'fs';
import path from 'path';

const componentsPath = './app/components/';
const mainAppPath = './app/page.js';

async function testComponents() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...\n');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
  const components = [
    'BusinessShowcase.js',
    'VoiceFeedbackModal.js', 
    'SmartFAQ.js',
    'PersonalizationModule.js',
    'LearningPlatform.js',
    'NeuralNetworkBackground.js'
  ];
  
  let errors = [];
  
  for (const component of components) {
    const filePath = path.join(componentsPath, component);
    
    try {
      if (!fs.existsSync(filePath)) {
        errors.push(`‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${component}`);
        continue;
      }
      
      const content = fs.readFileSync(filePath, 'utf8');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
      if (!content.includes("'use client'")) {
        errors.push(`‚ö†Ô∏è  ${component}: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç 'use client' –¥–∏—Ä–µ–∫—Ç–∏–≤–∞`);
      }
      
      if (!content.includes('export default')) {
        errors.push(`‚ùå ${component}: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç export default`);
      }
      
      if (!content.includes('function ') && !content.includes('const ')) {
        errors.push(`‚ùå ${component}: –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞`);
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å JSX
      if (!content.includes('return') || !content.includes('<')) {
        errors.push(`‚ùå ${component}: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è JSX —Å—Ç—Ä—É–∫—Ç—É—Ä–∞`);
      }
      
      console.log(`‚úÖ ${component} - OK`);
      
    } catch (error) {
      errors.push(`‚ùå ${component}: –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ - ${error.message}`);
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  try {
    const mainContent = fs.readFileSync(mainAppPath, 'utf8');
    
    for (const component of components) {
      const componentName = component.replace('.js', '');
      if (!mainContent.includes(`import ${componentName}`)) {
        errors.push(`‚ö†Ô∏è  page.js: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–º–ø–æ—Ä—Ç ${componentName}`);
      }
    }
    
    console.log('‚úÖ page.js –∏–º–ø–æ—Ä—Ç—ã - OK');
    
  } catch (error) {
    errors.push(`‚ùå page.js: –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è - ${error.message}`);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json
  try {
    const packageJson = JSON.parse(fs.readFileSync('./package.json', 'utf8'));
    
    const requiredDeps = ['next', 'react', 'react-dom'];
    for (const dep of requiredDeps) {
      if (!packageJson.dependencies[dep]) {
        errors.push(`‚ùå package.json: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å ${dep}`);
      }
    }
    
    console.log('‚úÖ package.json –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ - OK');
    
  } catch (error) {
    errors.push(`‚ùå package.json: –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è - ${error.message}`);
  }
  
  // –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
  console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò:');
  console.log(`–ö–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ: ${components.length}`);
  console.log(`–ù–∞–π–¥–µ–Ω–æ –æ—à–∏–±–æ–∫: ${errors.length}`);
  
  if (errors.length === 0) {
    console.log('\nüéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!');
    console.log('‚ú® –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é –Ω–∞ Netlify');
  } else {
    console.log('\n‚ö†Ô∏è  –ù–ê–ô–î–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´:');
    errors.forEach(error => console.log(error));
  }
}

testComponents().catch(console.error);
