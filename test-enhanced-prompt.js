// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ AI —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
// –ó–∞–ø—É—Å—Ç–∏—Ç—å: node test-enhanced-prompt.js

const testScenarios = [
  {
    name: "–ü–µ—Ä–≤–æ–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ",
    message: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —è –∏—â—É —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–¥–∞–∂",
    expectedElements: ["–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ù–µ–π—Ä–æ–Ω–æ–≤", "15 –ª–µ—Ç", "50+ –∫–æ–º–ø–∞–Ω–∏–π", "–∫–∞–∫–∞—è —Å—Ñ–µ—Ä–∞", "–±–∏–∑–Ω–µ—Å"]
  },
  {
    name: "–í–æ–∑—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —Ü–µ–Ω–µ",
    message: "–ó–≤—É—á–∏—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –Ω–æ –±–æ—é—Å—å —ç—Ç–æ –±—É–¥–µ—Ç —Å–ª–∏—à–∫–æ–º –¥–æ—Ä–æ–≥–æ –¥–ª—è –Ω–∞—Å",
    expectedElements: ["–ø–æ—Å—á–∏—Ç–∞–µ–º", "–æ–∫—É–ø–∏—Ç—Å—è", "–ø–∏–ª–æ—Ç", "ROI", "—Ç–µ—Ä—è–µ—Ç–µ"]
  },
  {
    name: "–ù–µ—Ç –≤—Ä–µ–º–µ–Ω–∏",
    message: "–£ –Ω–∞—Å —Å–µ–π—á–∞—Å –æ—á–µ–Ω—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥, –Ω–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º",
    expectedElements: ["–≥–æ—Ç–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è", "2 –Ω–µ–¥–µ–ª–∏", "–º–∏–Ω–∏–º—É–º —É—á–∞—Å—Ç–∏—è", "—Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é —á–∞—Å—Ç—å"]
  },
  {
    name: "–°–∫–µ–ø—Ç–∏—Ü–∏–∑–º",
    message: "–ú—ã —É–∂–µ –ø—Ä–æ–±–æ–≤–∞–ª–∏ —Ä–∞–∑–Ω—ã–µ AI —Ä–µ—à–µ–Ω–∏—è, –Ω–æ –æ–Ω–∏ –Ω–µ –¥–∞–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞",
    expectedElements: ["–ø–æ–Ω–∏–º–∞—é", "–∫–µ–π—Å", "—Ä–µ–∑—É–ª—å—Ç–∞—Ç", "–æ—Ç–ª–∏—á–∞–µ—Ç—Å—è", "–≥–∞—Ä–∞–Ω—Ç"]
  },
  {
    name: "–ó–∞–ø—Ä–æ—Å –∫–æ–Ω–∫—Ä–µ—Ç–∏–∫–∏",
    message: "–ú–æ–∂–µ—Ç–µ –ø–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã —É—Å–ø–µ—à–Ω—ã—Ö –≤–Ω–µ–¥—Ä–µ–Ω–∏–π –≤ e-commerce?",
    expectedElements: ["FreshMarket", "156%", "–ø—Ä–æ–¥–∞–∂", "ROI", "–∫–æ–Ω–≤–µ—Ä—Å–∏—è"]
  }
];

async function testPrompt() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ AI —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã\n');
  console.log('=' .repeat(60));
  
  const apiUrl = process.env.NODE_ENV === 'production' 
    ? 'https://your-netlify-site.netlify.app/api/assistant'
    : 'http://localhost:3000/api/assistant';
  
  for (const scenario of testScenarios) {
    console.log(`\nüìã –°—Ü–µ–Ω–∞—Ä–∏–π: ${scenario.name}`);
    console.log(`üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: "${scenario.message}"`);
    console.log('-'.repeat(60));
    
    try {
      const response = await fetch(apiUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'x-neuroexpert-csrf': 'test'
        },
        body: JSON.stringify({
          userMessage: scenario.message,
          model: 'gemini',
          history: []
        })
      });
      
      if (!response.ok) {
        console.error(`‚ùå HTTP Error: ${response.status}`);
        continue;
      }
      
      const data = await response.json();
      console.log(`\nü§ñ –û—Ç–≤–µ—Ç AI —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ:`);
      console.log(data.reply || data.answer);
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
      console.log(`\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤:`);
      let passedChecks = 0;
      
      for (const element of scenario.expectedElements) {
        const found = (data.reply || data.answer || '').toLowerCase().includes(element.toLowerCase());
        console.log(`   ${found ? '‚úì' : '‚úó'} –°–æ–¥–µ—Ä–∂–∏—Ç "${element}"`);
        if (found) passedChecks++;
      }
      
      const score = Math.round((passedChecks / scenario.expectedElements.length) * 100);
      console.log(`\nüìä –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –æ—Ç–≤–µ—Ç–∞: ${score}%`);
      
      if (score >= 80) {
        console.log('   üü¢ –û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!');
      } else if (score >= 60) {
        console.log('   üü° –•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –Ω–æ –µ—Å—Ç—å —á—Ç–æ —É–ª—É—á—à–∏—Ç—å');
      } else {
        console.log('   üî¥ –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–º–ø—Ç–∞');
      }
      
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
    }
    
    console.log('\n' + '='.repeat(60));
  }
  
  console.log('\n‚ú® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\n');
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º
async function testProfessionalism() {
  console.log('\nüéØ –¢–µ—Å—Ç –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º –∏ —á–µ–ª–æ–≤–µ—á–Ω–æ—Å—Ç—å\n');
  
  const complexQuery = `
    –î–æ–±—Ä—ã–π –¥–µ–Ω—å! –ú—ã —Å—Ä–µ–¥–Ω—è—è –∫–æ–º–ø–∞–Ω–∏—è –≤ —Å—Ñ–µ—Ä–µ –æ–Ω–ª–∞–π–Ω-–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è, 
    –æ–∫–æ–ª–æ 5000 –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤. –°–µ–π—á–∞—Å —É –Ω–∞—Å –±–æ–ª—å—à–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å –æ—Ç—Ç–æ–∫–æ–º - 
    —Ç–µ—Ä—è–µ–º –æ–∫–æ–ª–æ 40% —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –º–µ—Å—è—Ü–∞. –ü—Ä–æ–±–æ–≤–∞–ª–∏ —Ä–∞–∑–Ω—ã–µ 
    —Ä–µ—à–µ–Ω–∏—è, –Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–º–æ–≥–∞–µ—Ç. –ë—é–¥–∂–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω, –¥–∞ –∏ –∫–æ–º–∞–Ω–¥–∞ 
    –º–∞–ª–µ–Ω—å–∫–∞—è. –ß–µ—Å—Ç–Ω–æ –≥–æ–≤–æ—Ä—è, —É–∂–µ –æ—Ç—á–∞—è–ª–∏—Å—å. –ú–æ–∂–µ—Ç AI –∫–∞–∫-—Ç–æ –ø–æ–º–æ–∂–µ—Ç?
  `;
  
  console.log(`üí¨ –°–ª–æ–∂–Ω—ã–π –∑–∞–ø—Ä–æ—Å:\n${complexQuery}`);
  console.log('-'.repeat(60));
  
  // –ó–¥–µ—Å—å –±—ã –±—ã–ª —Ä–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ API
  console.log('\nüìù –û–∂–∏–¥–∞–µ–º—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞ –æ—Ç–≤–µ—Ç–∞:');
  console.log('   ‚úì –≠–º–ø–∞—Ç–∏—è –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã');
  console.log('   ‚úì –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –∫–µ–π—Å (SmartEdu)');
  console.log('   ‚úì –ü–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω —Ä–µ—à–µ–Ω–∏—è');
  console.log('   ‚úì –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ —Å—Ä–æ–∫–∞–º –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º');
  console.log('   ‚úì –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–∞—á–∞—Ç—å —Å –ø–∏–ª–æ—Ç–∞');
  console.log('   ‚úì –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞');
  console.log('   ‚úì –¢–µ–ø–ª—ã–π, –Ω–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ–Ω');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
if (require.main === module) {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ AI —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ...\n');
  
  testPrompt()
    .then(() => testProfessionalism())
    .catch(error => {
      console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
      process.exit(1);
    });
}

module.exports = { testPrompt, testProfessionalism };