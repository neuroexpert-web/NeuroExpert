#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üîç –ó–∞–ø—É—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ NeuroExpert\n');

const issues = [];
const warnings = [];
const successes = [];

// 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
function checkProjectStructure() {
  console.log('üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...');

  const requiredFiles = [
    'app/page.js',
    'app/layout.js',
    'app/globals.css',
    'app/components/NeuroExpertHero.js',
    'app/components/ROICalculator.tsx',
    'app/components/SmartFloatingAI.js',
    'app/components/ContactForm.js',
    'package.json',
    'next.config.js',
  ];

  requiredFiles.forEach((file) => {
    const filePath = path.join(process.cwd(), file);
    if (fs.existsSync(filePath)) {
      successes.push(`‚úÖ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω: ${file}`);
    } else {
      issues.push(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª: ${file}`);
    }
  });
}

// 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
function checkDependencies() {
  console.log('\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...');

  try {
    const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
    const requiredDeps = [
      '@google/generative-ai',
      'next',
      'react',
      'framer-motion',
      'bcryptjs',
      'jsonwebtoken',
    ];

    requiredDeps.forEach((dep) => {
      if (packageJson.dependencies[dep] || packageJson.devDependencies[dep]) {
        successes.push(`‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: ${dep}`);
      } else {
        issues.push(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: ${dep}`);
      }
    });
  } catch (error) {
    issues.push(`‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è package.json: ${error.message}`);
  }
}

// 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
function checkEnvVariables() {
  console.log('\nüîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...');

  const envExample = `
# AI Integration
GOOGLE_GEMINI_API_KEY=your-gemini-api-key

# Authentication
JWT_SECRET=your-super-secret-jwt-key-min-32-chars
ADMIN_PASSWORD_HASH=your-bcrypt-hash

# Telegram Integration (Optional)
TELEGRAM_BOT_TOKEN=your-telegram-bot-token
TELEGRAM_CHAT_ID=your-telegram-chat-id

# Sentry (Optional)
NEXT_PUBLIC_SENTRY_DSN=your-sentry-dsn
`;

  if (!fs.existsSync('.env.local') && !fs.existsSync('.env')) {
    warnings.push('‚ö†Ô∏è  –§–∞–π–ª .env.local –Ω–µ –Ω–∞–π–¥–µ–Ω');
    fs.writeFileSync('.env.example', envExample);
    console.log('üìù –°–æ–∑–¥–∞–Ω .env.example —Å –ø—Ä–∏–º–µ—Ä–æ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö');
  }
}

// 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ CSS –∏ —Å—Ç–∏–ª–µ–π
function checkStyles() {
  console.log('\nüé® –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª–µ–π...');

  const cssFiles = [
    'app/globals.css',
    'app/styles/premium-design-system.css',
    'app/styles/premium-glass-sections.css',
    'app/styles/mobile-fixes.css',
  ];

  cssFiles.forEach((file) => {
    if (fs.existsSync(file)) {
      const content = fs.readFileSync(file, 'utf8');

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–¥–∏–∞-–∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏
      if (content.includes('@media')) {
        successes.push(`‚úÖ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Å—Ç–∏–ª–∏ –Ω–∞–π–¥–µ–Ω—ã –≤: ${file}`);
      } else {
        warnings.push(`‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –º–µ–¥–∏–∞-–∑–∞–ø—Ä–æ—Å—ã –≤: ${file}`);
      }

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
      if (content.includes(':root') || content.includes('--')) {
        successes.push(`‚úÖ CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤: ${file}`);
      }
    }
  });
}

// 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
function checkComponents() {
  console.log('\nüß© –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...');

  const componentsDir = path.join(process.cwd(), 'app/components');

  if (fs.existsSync(componentsDir)) {
    const components = fs
      .readdirSync(componentsDir)
      .filter((file) => file.endsWith('.js') || file.endsWith('.jsx') || file.endsWith('.tsx'));

    components.forEach((component) => {
      const filePath = path.join(componentsDir, component);
      const content = fs.readFileSync(filePath, 'utf8');

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ use client
      if (!content.includes("'use client'") && !content.includes('"use client"')) {
        warnings.push(`‚ö†Ô∏è  –ö–æ–º–ø–æ–Ω–µ–Ω—Ç ${component} –Ω–µ –∏–º–µ–µ—Ç 'use client' –¥–∏—Ä–µ–∫—Ç–∏–≤—ã`);
      }

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —ç–∫—Å–ø–æ—Ä—Ç
      if (!content.includes('export default') && !content.includes('export {')) {
        issues.push(`‚ùå –ö–æ–º–ø–æ–Ω–µ–Ω—Ç ${component} –Ω–µ –∏–º–µ–µ—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞`);
      }

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
      if (content.includes('try') && content.includes('catch')) {
        successes.push(`‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤: ${component}`);
      }
    });
  } else {
    issues.push('‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
}

// 6. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ HTML –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏
function createResponsiveTest() {
  console.log('\nüì± –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏...');

  const testHtml = `
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>–¢–µ—Å—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏ NeuroExpert</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 20px;
      background: #0a0a0a;
      color: #fff;
    }
    .device-frame {
      margin: 20px 0;
      padding: 20px;
      border: 2px solid #fbbf24;
      border-radius: 10px;
      background: #1a1a1a;
    }
    .device-name {
      font-size: 18px;
      color: #fbbf24;
      margin-bottom: 10px;
    }
    iframe {
      border: 1px solid #333;
      border-radius: 5px;
      background: white;
    }
  </style>
</head>
<body>
  <h1>üîç –¢–µ—Å—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏ NeuroExpert</h1>
  
  <div class="device-frame">
    <div class="device-name">üì± iPhone 12 Pro (390x844)</div>
    <iframe src="http://localhost:3000" width="390" height="844"></iframe>
  </div>
  
  <div class="device-frame">
    <div class="device-name">üì± iPad (768x1024)</div>
    <iframe src="http://localhost:3000" width="768" height="1024"></iframe>
  </div>
  
  <div class="device-frame">
    <div class="device-name">üíª Laptop (1366x768)</div>
    <iframe src="http://localhost:3000" width="1366" height="768"></iframe>
  </div>
  
  <div class="device-frame">
    <div class="device-name">üñ•Ô∏è Desktop (1920x1080)</div>
    <iframe src="http://localhost:3000" width="1920" height="1080"></iframe>
  </div>
</body>
</html>
`;

  fs.writeFileSync('responsive-test.html', testHtml);
  console.log('‚úÖ –°–æ–∑–¥–∞–Ω responsive-test.html –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏');
}

// 7. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
function generateReport() {
  console.log('\nüìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞...\n');

  console.log('=== –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò ===\n');

  if (issues.length > 0) {
    console.log('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´:');
    issues.forEach((issue) => console.log(`   ${issue}`));
    console.log('');
  }

  if (warnings.length > 0) {
    console.log('‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:');
    warnings.forEach((warning) => console.log(`   ${warning}`));
    console.log('');
  }

  if (successes.length > 0) {
    console.log('‚úÖ –£–°–ü–ï–®–ù–´–ï –ü–†–û–í–ï–†–ö–ò:');
    successes.forEach((success) => console.log(`   ${success}`));
    console.log('');
  }

  // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  console.log('üìã –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:\n');
  console.log('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç: npm run dev');
  console.log('2. –û—Ç–∫—Ä–æ–π—Ç–µ responsive-test.html –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
  console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –∏ —Å—Å—ã–ª–∫–∏ –≤—Ä—É—á–Ω—É—é');
  console.log('4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä ROI');
  console.log('5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É AI —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ');
  console.log('6. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—Å–µ —Ç–µ–∫—Å—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã');
  console.log('7. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ –≥—Ä–∞—Ñ–∏–∫—É');

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
  const report = {
    timestamp: new Date().toISOString(),
    issues,
    warnings,
    successes,
    stats: {
      total: issues.length + warnings.length + successes.length,
      critical: issues.length,
      warnings: warnings.length,
      passed: successes.length,
    },
  };

  fs.writeFileSync('debug-report.json', JSON.stringify(report, null, 2));
  console.log('\nüìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ debug-report.json');
}

// –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
function runAllChecks() {
  checkProjectStructure();
  checkDependencies();
  checkEnvVariables();
  checkStyles();
  checkComponents();
  createResponsiveTest();
  generateReport();
}

// –ó–∞–ø—É—Å–∫
runAllChecks();
