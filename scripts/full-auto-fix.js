#!/usr/bin/env node

const fs = require('fs').promises;
const path = require('path');
const { execSync } = require('child_process');

console.log('üöÄ –ó–∞–ø—É—Å–∫–∞—é –ø–æ–ª–Ω—É—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞...\n');

const fixes = [];
const errors = [];

async function fileExists(filePath) {
  try {
    await fs.access(filePath);
    return true;
  } catch {
    return false;
  }
}

async function readFile(filePath) {
  try {
    return await fs.readFile(filePath, 'utf8');
  } catch (error) {
    return null;
  }
}

async function writeFile(filePath, content) {
  try {
    await fs.writeFile(filePath, content, 'utf8');
    return true;
  } catch (error) {
    errors.push(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª ${filePath}: ${error.message}`);
    return false;
  }
}

// 1. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å ParticlesBackground
async function fixParticlesIssue() {
  console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è—é –ø—Ä–æ–±–ª–µ–º—É —Å ParticlesBackground...');
  
  // –£–¥–∞–ª—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ ParticlesBackground –∏–∑ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
  const filesToCheck = [
    'app/design-showcase/page.js',
    'app/page.js',
    'app/components/NeuroExpertHero.js'
  ];
  
  for (const file of filesToCheck) {
    const content = await readFile(file);
    if (content && content.includes('ParticlesBackground')) {
      const newContent = content
        .replace(/import.*ParticlesBackground.*from.*\n/g, '')
        .replace(/<ParticlesBackground.*?\/>/g, '{/* ParticlesBackground –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω */}')
        .replace(/<ParticlesBackground.*?<\/ParticlesBackground>/g, '{/* ParticlesBackground –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω */}');
      
      if (await writeFile(file, newContent)) {
        fixes.push(`‚úÖ –£–¥–∞–ª–∏–ª ParticlesBackground –∏–∑ ${file}`);
      }
    }
  }
}

// 2. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
async function fixButtonsAndNavigation() {
  console.log('\nüîß –ò—Å–ø—Ä–∞–≤–ª—è—é –∫–Ω–æ–ø–∫–∏ –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏—é...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏
  const componentFiles = [
    'app/components/NeuroExpertHero.js',
    'app/components/PricingSection.tsx',
    'app/components/ContactForm.tsx',
    'app/components/WhyUsSection.tsx'
  ];
  
  for (const file of componentFiles) {
    const content = await readFile(file);
    if (!content) continue;
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –±–µ–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    if (content.includes('<button') && !content.includes('onClick')) {
      const newContent = content.replace(
        /<button([^>]*?)>/g,
        (match, attrs) => {
          if (!attrs.includes('onClick')) {
            return `<button${attrs} onClick={() => console.log('Button clicked')} >`;
          }
          return match;
        }
      );
      
      if (await writeFile(file, newContent)) {
        fixes.push(`‚úÖ –î–æ–±–∞–≤–∏–ª –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –≤ ${file}`);
      }
    }
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫–∏
    if (content.includes('href="#"')) {
      const newContent = content.replace(/href="#"/g, 'href="#contact"');
      if (await writeFile(file, newContent)) {
        fixes.push(`‚úÖ –ò—Å–ø—Ä–∞–≤–∏–ª –ø—É—Å—Ç—ã–µ —Å—Å—ã–ª–∫–∏ –≤ ${file}`);
      }
    }
  }
}

// 3. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –º–µ–∂–¥—É –≤–µ—Ä—Å–∏—è–º–∏
async function fixHeaders() {
  console.log('\nüîß –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é –∑–∞–≥–æ–ª–æ–≤–∫–∏ –º–µ–∂–¥—É desktop –∏ mobile –≤–µ—Ä—Å–∏—è–º–∏...');
  
  const heroFile = 'app/components/NeuroExpertHero.js';
  const content = await readFile(heroFile);
  
  if (content) {
    // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –¥–ª—è –≤—Å–µ—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ —ç–∫—Ä–∞–Ω–∞
    const newContent = content.replace(
      /className=".*?(?:hidden|block).*?(?:md:|lg:|sm:)(?:hidden|block).*?"/g,
      (match) => {
        // –£–¥–∞–ª—è–µ–º —É—Å–ª–æ–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        if (match.includes('text-') || match.includes('font-')) {
          return match.replace(/(?:hidden|block)\s+(?:md:|lg:|sm:)(?:hidden|block)/g, '');
        }
        return match;
      }
    );
    
    if (await writeFile(heroFile, newContent)) {
      fixes.push('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–ª –∑–∞–≥–æ–ª–æ–≤–∫–∏ –º–µ–∂–¥—É –≤–µ—Ä—Å–∏—è–º–∏');
    }
  }
}

// 4. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ ROI
async function fixROICalculator() {
  console.log('\nüîß –ò—Å–ø—Ä–∞–≤–ª—è—é –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä ROI...');
  
  const calculatorFile = 'app/components/ROICalculator.tsx';
  const content = await readFile(calculatorFile);
  
  if (content) {
    let newContent = content;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–æ–ª–µ–π
    if (!content.includes('onChange') && content.includes('<input')) {
      newContent = newContent.replace(
        /<input([^>]*?)\/>/g,
        (match, attrs) => {
          if (!attrs.includes('onChange')) {
            return `<input${attrs} onChange={(e) => console.log('Input changed:', e.target.value)} />`;
          }
          return match;
        }
      );
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    if (!content.includes('onSubmit') && content.includes('<form')) {
      newContent = newContent.replace(
        /<form([^>]*?)>/g,
        (match, attrs) => {
          if (!attrs.includes('onSubmit')) {
            return `<form${attrs} onSubmit={(e) => { e.preventDefault(); console.log('Form submitted'); }}>`;
          }
          return match;
        }
      );
    }
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥–∏–∫—É —Ä–∞—Å—á–µ—Ç–∞
    if (content.includes('calculateROI')) {
      newContent = newContent.replace(
        /const calculateROI[^}]*}/g,
        `const calculateROI = () => {
          const employees = parseInt(formData.employees) || 0;
          const avgSalary = parseInt(formData.avgSalary) || 0;
          const industry = formData.industry || 'tech';
          
          // –ë–∞–∑–æ–≤–∞—è —Ñ–æ—Ä–º—É–ª–∞ —Ä–∞—Å—á–µ—Ç–∞ ROI
          const timeSaved = employees * 5; // —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é
          const moneySaved = timeSaved * (avgSalary / 160); // –ø–æ—á–∞—Å–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞
          const productivity = moneySaved * 1.3; // 30% –ø—Ä–∏—Ä–æ—Å—Ç –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
          
          setResults({
            timeSaved,
            moneySaved: Math.round(moneySaved),
            productivity: Math.round(productivity),
            totalBenefit: Math.round(moneySaved + productivity)
          });
        }`
      );
    }
    
    if (newContent !== content && await writeFile(calculatorFile, newContent)) {
      fixes.push('‚úÖ –ò—Å–ø—Ä–∞–≤–∏–ª –ª–æ–≥–∏–∫—É –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ ROI');
    }
  }
}

// 5. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ AI —á–∞—Ç–∞
async function fixAIChat() {
  console.log('\nüîß –ò—Å–ø—Ä–∞–≤–ª—è—é AI —á–∞—Ç...');
  
  const chatFile = 'app/components/SmartFloatingAI.js';
  const content = await readFile(chatFile);
  
  if (content) {
    let newContent = content;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    if (!content.includes('handleSendMessage')) {
      newContent = newContent.replace(
        /export default function SmartFloatingAI/,
        `export default function SmartFloatingAI() {
  const [messages, setMessages] = useState([]);
  const [input, setInput] = useState('');
  
  const handleSendMessage = async () => {
    if (!input.trim()) return;
    
    const userMessage = { role: 'user', content: input };
    setMessages(prev => [...prev, userMessage]);
    setInput('');
    
    // –í—Ä–µ–º–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
    setTimeout(() => {
      const botMessage = { 
        role: 'assistant', 
        content: '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ù–∞—à AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏.' 
      };
      setMessages(prev => [...prev, botMessage]);
    }, 1000);
  };
  
  // –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞...`
      );
    }
    
    if (newContent !== content && await writeFile(chatFile, newContent)) {
      fixes.push('‚úÖ –î–æ–±–∞–≤–∏–ª –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –≤ AI —á–∞—Ç');
    }
  }
}

// 6. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
async function createComponentChecker() {
  console.log('\nüîß –°–æ–∑–¥–∞—é —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...');
  
  const checkerContent = `
import { render, screen, fireEvent } from '@testing-library/react';

export async function checkComponent(Component, name) {
  console.log(\`–ü—Ä–æ–≤–µ—Ä—è—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç \${name}...\`);
  
  try {
    const { container } = render(<Component />);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
    const buttons = container.querySelectorAll('button');
    buttons.forEach((button, index) => {
      fireEvent.click(button);
      console.log(\`  ‚úì –ö–Ω–æ–ø–∫–∞ \${index + 1} —Ä–∞–±–æ—Ç–∞–µ—Ç\`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Å—Å—ã–ª–∫–∏
    const links = container.querySelectorAll('a');
    links.forEach((link, index) => {
      if (link.href === '#' || !link.href) {
        console.log(\`  ‚ö†Ô∏è  –°—Å—ã–ª–∫–∞ \${index + 1} –ø—É—Å—Ç–∞—è\`);
      }
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º—ã
    const forms = container.querySelectorAll('form');
    forms.forEach((form, index) => {
      fireEvent.submit(form);
      console.log(\`  ‚úì –§–æ—Ä–º–∞ \${index + 1} –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è\`);
    });
    
    return true;
  } catch (error) {
    console.error(\`  ‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ \${name}:\`, error.message);
    return false;
  }
}
`;
  
  if (await writeFile('scripts/component-checker.js', checkerContent)) {
    fixes.push('‚úÖ –°–æ–∑–¥–∞–ª —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤');
  }
}

// 7. –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
async function runAllFixes() {
  try {
    await fixParticlesIssue();
    await fixButtonsAndNavigation();
    await fixHeaders();
    await fixROICalculator();
    await fixAIChat();
    await createComponentChecker();
    
    // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –º–æ–±–∏–ª—å–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏
    const mobileStyles = `
/* –ú–æ–±–∏–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ */
@media (max-width: 768px) {
  /* –û–±—â–∏–µ —Å—Ç–∏–ª–∏ */
  .container {
    padding: 1rem !important;
  }
  
  /* –ó–∞–≥–æ–ª–æ–≤–∫–∏ */
  h1 {
    font-size: 2rem !important;
    line-height: 1.2 !important;
  }
  
  h2 {
    font-size: 1.5rem !important;
  }
  
  h3 {
    font-size: 1.25rem !important;
  }
  
  /* –ö–Ω–æ–ø–∫–∏ */
  button, .btn {
    width: 100% !important;
    padding: 1rem !important;
    font-size: 1rem !important;
  }
  
  /* –§–æ—Ä–º—ã */
  input, textarea, select {
    width: 100% !important;
    font-size: 16px !important; /* –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∑—É–º –Ω–∞ iOS */
  }
  
  /* –°–µ–∫—Ü–∏–∏ */
  section {
    padding: 2rem 1rem !important;
  }
  
  /* –ù–∞–≤–∏–≥–∞—Ü–∏—è */
  nav {
    position: sticky !important;
    top: 0 !important;
    z-index: 999 !important;
  }
  
  /* –ö–∞—Ä—Ç–æ—á–∫–∏ */
  .card {
    margin-bottom: 1rem !important;
    width: 100% !important;
  }
  
  /* –°–µ—Ç–∫–∞ */
  .grid {
    grid-template-columns: 1fr !important;
    gap: 1rem !important;
  }
  
  /* –§–ª–µ–∫—Å */
  .flex {
    flex-direction: column !important;
  }
  
  /* –°–∫—Ä—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã */
  .desktop-only {
    display: none !important;
  }
  
  /* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */
  .mobile-only {
    display: block !important;
  }
}

/* –ü–ª–∞–Ω—à–µ—Ç—ã */
@media (min-width: 769px) and (max-width: 1024px) {
  .container {
    padding: 2rem !important;
  }
  
  .grid {
    grid-template-columns: repeat(2, 1fr) !important;
  }
}
`;
    
    if (await writeFile('app/styles/mobile-fixes.css', mobileStyles)) {
      fixes.push('‚úÖ –°–æ–∑–¥–∞–ª —Ñ–∞–π–ª —Å –º–æ–±–∏–ª—å–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏');
    }
    
    // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –ø—Ä–æ–≤–µ—Ä–∫–∏
    const testScript = `
#!/usr/bin/env node

const puppeteer = require('puppeteer');

async function runTests() {
  console.log('üß™ –ó–∞–ø—É—Å–∫–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã...');
  
  const browser = await puppeteer.launch({ headless: true });
  const page = await browser.newPage();
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º desktop –≤–µ—Ä—Å–∏—é
  await page.setViewport({ width: 1920, height: 1080 });
  await page.goto('http://localhost:3000');
  
  console.log('‚úì Desktop –≤–µ—Ä—Å–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é
  await page.setViewport({ width: 375, height: 667 });
  await page.goto('http://localhost:3000');
  
  console.log('‚úì Mobile –≤–µ—Ä—Å–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫–∏
  const buttons = await page.$$('button');
  console.log(\`‚úì –ù–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–æ–∫: \${buttons.length}\`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º—ã
  const forms = await page.$$('form');
  console.log(\`‚úì –ù–∞–π–¥–µ–Ω–æ —Ñ–æ—Ä–º: \${forms.length}\`);
  
  await browser.close();
  console.log('\\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã!');
}

runTests().catch(console.error);
`;
    
    if (await writeFile('scripts/run-tests.js', testScript)) {
      fixes.push('‚úÖ –°–æ–∑–¥–∞–ª —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    }
    
  } catch (error) {
    errors.push(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
runAllFixes().then(() => {
  console.log('\nüìä –û–¢–ß–ï–¢ –û –í–´–ü–û–õ–ù–ï–ù–ù–´–• –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø–•:\n');
  
  if (fixes.length > 0) {
    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ:');
    fixes.forEach(fix => console.log(`   ${fix}`));
  }
  
  if (errors.length > 0) {
    console.log('\n‚ùå –û—à–∏–±–∫–∏:');
    errors.forEach(error => console.log(`   ${error}`));
  }
  
  console.log('\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run dev');
  console.log('2. –û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:3000');
  console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—Ä—É—á–Ω—É—é');
  console.log('4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run build (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ production —Å–±–æ—Ä–∫–∏)');
  console.log('\n‚ú® –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
});