#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∏–ø–∏—á–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º –≤ NeuroExpert
# –ó–∞–ø—É—Å–∫: ./scripts/fix-common-issues.sh

echo "üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–∏—á–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º..."
echo "=============================================="

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

# –°—á–µ—Ç—á–∏–∫–∏
FIXED=0
ERRORS=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç—É—Å–∞
status() {
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $1${NC}"
        ((FIXED++))
    else
        echo -e "${RED}‚ùå $1${NC}"
        ((ERRORS++))
    fi
}

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
echo -e "\n${YELLOW}1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤...${NC}"

# .env.local
if [ ! -f .env.local ]; then
    echo "–°–æ–∑–¥–∞—é .env.local..."
    if [ -f .env.example ]; then
        cp .env.example .env.local
        status "–°–æ–∑–¥–∞–Ω .env.local –∏–∑ –ø—Ä–∏–º–µ—Ä–∞"
    else
        cat > .env.local << EOF
GEMINI_API_KEY=your_key_here
JWT_SECRET=$(openssl rand -base64 32 2>/dev/null || echo "your_jwt_secret")
ADMIN_PASSWORD=admin123
NODE_ENV=development
EOF
        status "–°–æ–∑–¥–∞–Ω –±–∞–∑–æ–≤—ã–π .env.local"
    fi
else
    echo -e "${GREEN}‚úÖ .env.local —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
fi

# 2. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏
echo -e "\n${YELLOW}2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ package-lock.json
if [ ! -f package-lock.json ]; then
    echo "–°–æ–∑–¥–∞—é package-lock.json..."
    npm install --package-lock-only 2>/dev/null
    status "–°–æ–∑–¥–∞–Ω package-lock.json"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å node_modules
if [ ! -d node_modules ] || [ ! -f node_modules/.package-lock.json ]; then
    echo "–ü–µ—Ä–µ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    rm -rf node_modules 2>/dev/null
    npm ci 2>/dev/null || npm install 2>/dev/null
    status "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–∞–∫–µ—Ç—ã
    if npm list --depth=0 2>&1 | grep -q "UNMET DEPENDENCY\|missing:"; then
        echo "–ù–∞–π–¥–µ–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, –∏—Å–ø—Ä–∞–≤–ª—è—é..."
        npm install 2>/dev/null
        status "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        echo -e "${GREEN}‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
    fi
fi

# 3. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å TypeScript
echo -e "\n${YELLOW}3. –ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ tsconfig.json
if [ ! -f tsconfig.json ]; then
    echo "–°–æ–∑–¥–∞—é tsconfig.json..."
    cat > tsconfig.json << EOF
{
  "compilerOptions": {
    "target": "es5",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": false,
    "forceConsistentCasingInFileNames": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [{"name": "next"}],
    "paths": {"@/*": ["./*"]}
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}
EOF
    status "–°–æ–∑–¥–∞–Ω tsconfig.json"
else
    echo -e "${GREEN}‚úÖ tsconfig.json —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
fi

# 4. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å Next.js
echo -e "\n${YELLOW}4. –ü—Ä–æ–≤–µ—Ä–∫–∞ Next.js –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º next.config.js
if [ ! -f next.config.js ]; then
    echo "–°–æ–∑–¥–∞—é next.config.js..."
    cat > next.config.js << EOF
/** @type {import('next').NextConfig} */
const nextConfig = {
  reactStrictMode: true,
  swcMinify: true,
  images: {
    domains: ['localhost'],
  },
}

module.exports = nextConfig
EOF
    status "–°–æ–∑–¥–∞–Ω next.config.js"
else
    echo -e "${GREEN}‚úÖ next.config.js —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
fi

# 5. –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
echo -e "\n${YELLOW}5. –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞...${NC}"

# Next.js –∫—ç—à
if [ -d .next ]; then
    rm -rf .next
    status "–û—á–∏—â–µ–Ω .next –∫—ç—à"
fi

# npm –∫—ç—à
npm cache clean --force 2>/dev/null
status "–û—á–∏—â–µ–Ω npm –∫—ç—à"

# 6. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
echo -e "\n${YELLOW}6. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞...${NC}"

# –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º–∏
if [ -d scripts ]; then
    chmod +x scripts/*.sh 2>/dev/null
    status "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∞ –¥–ª—è —Å–∫—Ä–∏–ø—Ç–æ–≤"
fi

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ Git —Ö—É–∫–æ–≤
echo -e "\n${YELLOW}7. –ü—Ä–æ–≤–µ—Ä–∫–∞ Git —Ö—É–∫–æ–≤...${NC}"

if [ -f .husky/pre-commit ]; then
    npx husky install 2>/dev/null
    status "Git —Ö—É–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã"
else
    echo -e "${YELLOW}Git —Ö—É–∫–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã${NC}"
fi

# 8. –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
echo -e "\n${YELLOW}8. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...${NC}"

directories=("public" "app" "app/components" "scripts" "tests")
for dir in "${directories[@]}"; do
    if [ ! -d "$dir" ]; then
        mkdir -p "$dir"
        status "–°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $dir"
    fi
done

# 9. –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
echo -e "\n${YELLOW}9. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏...${NC}"

# TypeScript –ø—Ä–æ–≤–µ—Ä–∫–∞
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript..."
if npx tsc --noEmit 2>/dev/null; then
    status "TypeScript –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞"
else
    echo -e "${YELLOW}‚ö†Ô∏è  TypeScript –æ—à–∏–±–∫–∏ (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è JS –ø—Ä–æ–µ–∫—Ç–∞)${NC}"
fi

# ESLint –ø—Ä–æ–≤–µ—Ä–∫–∞
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ ESLint..."
if npm run lint 2>/dev/null; then
    status "ESLint –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞"
else
    # –ü—ã—Ç–∞–µ–º—Å—è –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–∏—Ç—å
    echo "–ü—ã—Ç–∞—é—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å ESLint –æ—à–∏–±–∫–∏..."
    npm run lint -- --fix 2>/dev/null
    if [ $? -eq 0 ]; then
        status "ESLint –æ—à–∏–±–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ ESLint –æ—à–∏–±–∫–∏ —Ç—Ä–µ–±—É—é—Ç —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è${NC}"
    fi
fi

# 10. –§–∏–Ω–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞
echo -e "\n${YELLOW}10. –ü—Ä–æ–±–Ω–∞—è —Å–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...${NC}"

echo "–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç..."
if npm run build 2>&1 | grep -q "Compiled successfully"; then
    status "–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è!"
else
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ - —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ${NC}"
    echo -e "${YELLOW}–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å: npm run dev${NC}"
fi

# –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
echo -e "\n${GREEN}=====================================${NC}"
echo -e "${GREEN}üìä –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç:${NC}"
echo -e "${GREEN}=====================================${NC}"
echo -e "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º: ${GREEN}$FIXED${NC}"
echo -e "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å: ${RED}$ERRORS${NC}"

# –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
echo -e "\n${YELLOW}üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:${NC}"

if [ ! -f .env.local ] || grep -q "your_key_here" .env.local 2>/dev/null; then
    echo -e "1. ${YELLOW}–î–æ–±–∞–≤—å—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ API –∫–ª—é—á–∏ –≤ .env.local${NC}"
    echo "   - GEMINI_API_KEY –∏–∑ https://makersuite.google.com/app/apikey"
fi

if [ $ERRORS -gt 0 ]; then
    echo -e "2. ${YELLOW}–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –≤ dev —Ä–µ–∂–∏–º–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:${NC}"
    echo "   npm run dev"
    echo -e "3. ${YELLOW}–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –æ—à–∏–±–æ–∫ –≤—ã—à–µ${NC}"
fi

echo -e "\n${GREEN}‚ú® –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!${NC}"

# –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç
if [ $ERRORS -eq 0 ]; then
    echo -e "\n${GREEN}–í—Å—ë –≤—ã–≥–ª—è–¥–∏—Ç —Ö–æ—Ä–æ—à–æ!${NC}"
    read -p "–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç —Å–µ–π—á–∞—Å? (Y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]] || [ -z "$REPLY" ]; then
        npm run dev
    fi
fi