#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞
echo "üîí –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

ISSUES_FOUND=0

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ .env —Ñ–∞–π–ª—ã
echo -e "\n${BLUE}1. –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–æ–≤...${NC}"

ENV_FILES=(".env" ".env.local" ".env.production" ".env.development")
for file in "${ENV_FILES[@]}"; do
    if [ -f "$file" ]; then
        echo -e "${RED}‚ùå –ö–†–ò–¢–ò–ß–ù–û: –ù–∞–π–¥–µ–Ω $file${NC}"
        echo "   –≠—Ç–æ—Ç —Ñ–∞–π–ª –ù–ï –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏!"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ–±–∞–≤–ª–µ–Ω –ª–∏ –≤ git
        if git ls-files --error-unmatch "$file" 2>/dev/null; then
            echo -e "${RED}   ‚ö†Ô∏è  –§–ê–ô–õ –î–û–ë–ê–í–õ–ï–ù –í GIT! –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ —É–¥–∞–ª–∏—Ç–µ!${NC}"
            echo "   –í—ã–ø–æ–ª–Ω–∏—Ç–µ: git rm --cached $file"
            ISSUES_FOUND=1
        else
            echo -e "${YELLOW}   ‚úì –§–∞–π–ª –Ω–µ –≤ git (—Ö–æ—Ä–æ—à–æ)${NC}"
        fi
    fi
done

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ .gitignore
echo -e "\n${BLUE}2. –ü—Ä–æ–≤–µ—Ä–∫–∞ .gitignore...${NC}"

REQUIRED_IGNORES=(".env" ".env.local" ".env.production" ".env.development" ".env.*")
for pattern in "${REQUIRED_IGNORES[@]}"; do
    if ! grep -q "^$pattern" .gitignore 2>/dev/null; then
        echo -e "${YELLOW}‚ö†Ô∏è  –ü–∞—Ç—Ç–µ—Ä–Ω '$pattern' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .gitignore${NC}"
        echo "$pattern" >> .gitignore
        echo -e "${GREEN}‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –≤ .gitignore${NC}"
    fi
done

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ö–∞—Ä–¥–∫–æ–¥ —Å–µ–∫—Ä–µ—Ç–æ–≤
echo -e "\n${BLUE}3. –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Ö–∞—Ä–¥–∫–æ–¥ —Å–µ–∫—Ä–µ—Ç–æ–≤...${NC}"

# –ü–∞—Ç—Ç–µ—Ä–Ω—ã —Å–µ–∫—Ä–µ—Ç–æ–≤
SECRET_PATTERNS=(
    "AIza[0-9A-Za-z\\-_]{35}"                    # Google API Key
    "sk-[a-zA-Z0-9]{48}"                         # OpenAI API Key
    "ghp_[a-zA-Z0-9]{36}"                        # GitHub Personal Token
    "ghs_[a-zA-Z0-9]{36}"                        # GitHub Secret
    "PRIVATE_KEY.*=.*['\"].*['\"]"               # Private keys
    "API_KEY.*=.*['\"].*['\"]"                   # API keys
    "SECRET.*=.*['\"].*['\"]"                    # Secrets
    "PASSWORD.*=.*['\"].*['\"]"                  # Passwords
    "mongodb\\+srv://[^\\s]*"                    # MongoDB connection strings
    "postgres://[^\\s]*"                         # PostgreSQL connection strings
)

echo "–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤..."
for pattern in "${SECRET_PATTERNS[@]}"; do
    FOUND=$(grep -r -E "$pattern" . \
        --include="*.js" \
        --include="*.jsx" \
        --include="*.ts" \
        --include="*.tsx" \
        --include="*.json" \
        --exclude-dir=node_modules \
        --exclude-dir=.next \
        --exclude-dir=.git \
        --exclude="*.example" \
        --exclude="*.md" 2>/dev/null | head -5)
    
    if [ ! -z "$FOUND" ]; then
        echo -e "${RED}‚ùå –ù–∞–π–¥–µ–Ω –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π —Å–µ–∫—Ä–µ—Ç (–ø–∞—Ç—Ç–µ—Ä–Ω: $pattern):${NC}"
        echo "$FOUND" | head -3
        ISSUES_FOUND=1
    fi
done

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ package.json –Ω–∞ —Å–∫—Ä–∏–ø—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
echo -e "\n${BLUE}4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...${NC}"

if ! grep -q "\"audit\"" package.json; then
    echo -e "${YELLOW}–î–æ–±–∞–≤–ª—è—é —Å–∫—Ä–∏–ø—Ç audit –≤ package.json...${NC}"
    npm pkg set scripts.audit="npm audit --production"
fi

if ! grep -q "\"check:security\"" package.json; then
    echo -e "${YELLOW}–î–æ–±–∞–≤–ª—è—é —Å–∫—Ä–∏–ø—Ç check:security...${NC}"
    npm pkg set scripts.check:security="bash scripts/security-check.sh"
fi

# 5. –°–æ–∑–¥–∞–Ω–∏–µ .env.example –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
echo -e "\n${BLUE}5. –ü—Ä–æ–≤–µ—Ä–∫–∞ .env.example...${NC}"

if [ ! -f ".env.example" ]; then
    echo -e "${YELLOW}–°–æ–∑–¥–∞—é .env.example...${NC}"
    cat > .env.example << EOF
# Copy this file to .env.local and fill in your values
# NEVER commit .env.local to version control!

# Required API Keys
GEMINI_API_KEY=your_gemini_api_key_here
OPENAI_API_KEY=your_openai_api_key_here

# Authentication
JWT_SECRET=generate_random_secret_here
ADMIN_PASSWORD=set_strong_password_here

# Optional Services
TELEGRAM_BOT_TOKEN=your_telegram_bot_token
TELEGRAM_CHAT_ID=your_telegram_chat_id

# Database (if used)
DATABASE_URL=postgresql://user:password@localhost:5432/dbname
REDIS_URL=redis://localhost:6379

# Environment
NODE_ENV=development
NEXT_PUBLIC_APP_URL=http://localhost:3000
EOF
    echo -e "${GREEN}‚úÖ .env.example —Å–æ–∑–¥–∞–Ω${NC}"
fi

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ pre-commit hooks
echo -e "\n${BLUE}6. –ü—Ä–æ–≤–µ—Ä–∫–∞ pre-commit hooks...${NC}"

if [ -d ".husky" ]; then
    if [ ! -f ".husky/pre-commit" ]; then
        echo -e "${YELLOW}–°–æ–∑–¥–∞—é pre-commit hook...${NC}"
        cat > .husky/pre-commit << 'EOF'
#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–µ–∫—Ä–µ—Ç—ã –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º
echo "üîç Checking for secrets..."

# –ó–∞–ø—Ä–µ—â–∞–µ–º –∫–æ–º–º–∏—Ç .env —Ñ–∞–π–ª–æ–≤
if git diff --cached --name-only | grep -E "^\.env"; then
    echo "‚ùå ERROR: Attempting to commit .env file!"
    echo "Remove it with: git rm --cached <filename>"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ö–∞—Ä–¥–∫–æ–¥ —Å–µ–∫—Ä–µ—Ç–æ–≤
if git diff --cached --name-only -z | xargs -0 grep -E "(AIza[0-9A-Za-z\-_]{35}|sk-[a-zA-Z0-9]{48}|PRIVATE_KEY|API_KEY.*=.*[\'\"])" 2>/dev/null; then
    echo "‚ùå ERROR: Possible secret detected in staged files!"
    echo "Please review your changes."
    exit 1
fi

echo "‚úÖ Security check passed"
EOF
        chmod +x .husky/pre-commit
        echo -e "${GREEN}‚úÖ Pre-commit hook —Å–æ–∑–¥–∞–Ω${NC}"
    fi
fi

# 7. –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
echo -e "\n${BLUE}========================================${NC}"
echo -e "${BLUE}üìä –û—Ç—á–µ—Ç –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏${NC}"
echo -e "${BLUE}========================================${NC}"

if [ $ISSUES_FOUND -eq 0 ]; then
    echo -e "${GREEN}‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!${NC}"
else
    echo -e "${RED}‚ùå –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏!${NC}"
    echo -e "${RED}   –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º.${NC}"
fi

echo -e "\n${YELLOW}–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:${NC}"
echo "1. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∫–æ–º–º–∏—Ç—å—Ç–µ .env —Ñ–∞–π–ª—ã"
echo "2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Å–µ–∫—Ä–µ—Ç–æ–≤"
echo "3. –†–µ–≥—É–ª—è—Ä–Ω–æ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ npm audit"
echo "4. –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–∏"
echo "5. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∫–∞–∫ GitHub Secret Scanning"

# –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–¥ –æ—à–∏–±–∫–∏ –µ—Å–ª–∏ –±—ã–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã
exit $ISSUES_FOUND